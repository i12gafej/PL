Terminals unused in grammar

    BOOL
    UNDEFINED


Grammar

    0 $accept: program $end

    1 program: stmtlist

    2 stmtlist: ε
    3         | stmtlist stmt
    4         | stmtlist error

    5 stmt: COMMENT
    6     | SEMICOLON
    7     | asgn SEMICOLON
    8     | print SEMICOLON
    9     | read SEMICOLON
   10     | readstring SEMICOLON
   11     | if
   12     | dowhile SEMICOLON
   13     | while
   14     | repeat
   15     | for
   16     | cases
   17     | block
   18     | clear
   19     | place

   20 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET

   21 controlSymbol: ε

   22 if: IF controlSymbol cond THEN stmtlist END_IF
   23   | IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

   24 dowhile: DO stmtlist WHILE controlSymbol cond

   25 while: WHILE controlSymbol cond DO stmtlist END_WHILE

   26 repeat: REPEAT controlSymbol stmtlist UNTIL cond

   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

   29 cases: CASES LPAREN exp RPAREN value_list default END_CASES

   30 value_list: VALUE exp COLON stmtlist
   31           | value_list VALUE exp COLON stmtlist

   32 default: DEFAULT COLON stmtlist
   33        | ε

   34 clear: CLEAR SEMICOLON

   35 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON

   36 cond: LPAREN exp RPAREN

   37 asgn: VARIABLE ASSIGNMENT exp
   38     | VARIABLE ASSIGNMENT asgn
   39     | CONSTANT ASSIGNMENT exp
   40     | CONSTANT ASSIGNMENT asgn

   41 print: PRINT exp

   42 read: READ LPAREN VARIABLE RPAREN
   43     | READ LPAREN CONSTANT RPAREN

   44 readstring: READ_STRING LPAREN VARIABLE RPAREN
   45           | READ_STRING LPAREN CONSTANT RPAREN

   46 exp: NUMBER
   47    | STRING
   48    | exp CONCAT exp
   49    | exp PLUS exp
   50    | exp MINUS exp
   51    | exp MULTIPLICATION exp
   52    | exp DIVISION exp
   53    | exp INT_DIVISION exp
   54    | LPAREN exp RPAREN
   55    | PLUS exp
   56    | MINUS exp
   57    | exp MODULO exp
   58    | exp POWER exp
   59    | VARIABLE
   60    | CONSTANT
   61    | BUILTIN LPAREN listOfExp RPAREN
   62    | exp GREATER_THAN exp
   63    | exp GREATER_OR_EQUAL exp
   64    | exp LESS_THAN exp
   65    | exp LESS_OR_EQUAL exp
   66    | exp EQUAL exp
   67    | exp NOT_EQUAL exp
   68    | exp AND exp
   69    | exp OR exp
   70    | NOT exp

   71 listOfExp: ε
   72          | exp restOfListOfExp

   73 restOfListOfExp: ε
   74                | COMMA exp restOfListOfExp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    SEMICOLON (258) 6 7 8 9 10 12 34 35
    COLON (259) 30 31 32
    COMMENT <comentario> (260) 5
    PRINT (261) 41
    READ (262) 42 43
    READ_STRING (263) 44 45
    IF (264) 22 23
    ELSE (265) 23
    WHILE (266) 24 25
    THEN (267) 22 23
    END_IF (268) 22 23
    END_WHILE (269) 25
    REPEAT (270) 26
    FOR (271) 27 28
    FROM (272) 27 28
    UNTIL (273) 26 27 28
    END_FOR (274) 27 28
    STEP (275) 28
    CASES (276) 29
    VALUE (277) 30 31
    DEFAULT (278) 32
    END_CASES (279) 29
    DO (280) 24 25 27 28
    CLEAR (281) 34
    PLACE (282) 35
    LETFCURLYBRACKET (283) 20
    RIGHTCURLYBRACKET (284) 20
    ASSIGNMENT (285) 37 38 39 40
    COMMA (286) 35 74
    STRING <cadena> (287) 47
    NUMBER <number> (288) 46
    BOOL <logic> (289)
    VARIABLE <string> (290) 27 28 37 38 42 44 59
    UNDEFINED <string> (291)
    CONSTANT <string> (292) 39 40 43 45 60
    BUILTIN <string> (293) 61
    OR (294) 69
    AND (295) 68
    GREATER_OR_EQUAL (296) 63
    LESS_OR_EQUAL (297) 65
    GREATER_THAN (298) 62
    LESS_THAN (299) 64
    EQUAL (300) 66
    NOT_EQUAL (301) 67
    NOT (302) 70
    CONCAT (303) 48
    PLUS (304) 49 55
    MINUS (305) 50 56
    MULTIPLICATION (306) 51
    DIVISION (307) 52
    MODULO (308) 57
    INT_DIVISION (309) 53
    LPAREN (310) 29 35 36 42 43 44 45 54 61
    RPAREN (311) 29 35 36 42 43 44 45 54 61
    UNARY (312)
    POWER (313) 58


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program <prog> (60)
        on left: 1
        on right: 0
    stmtlist <stmts> (61)
        on left: 2 3 4
        on right: 1 3 4 20 22 23 24 25 26 27 28 30 31 32
    stmt <st> (62)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
        on right: 3
    block <st> (63)
        on left: 20
        on right: 17
    controlSymbol (64)
        on left: 21
        on right: 22 23 24 25 26 27 28
    if <st> (65)
        on left: 22 23
        on right: 11
    dowhile <st> (66)
        on left: 24
        on right: 12
    while <st> (67)
        on left: 25
        on right: 13
    repeat <st> (68)
        on left: 26
        on right: 14
    for <st> (69)
        on left: 27 28
        on right: 15
    cases <st> (70)
        on left: 29
        on right: 16
    value_list <valuestmts> (71)
        on left: 30 31
        on right: 29 31
    default <st> (72)
        on left: 32 33
        on right: 29
    clear <st> (73)
        on left: 34
        on right: 18
    place <st> (74)
        on left: 35
        on right: 19
    cond <expNode> (75)
        on left: 36
        on right: 22 23 24 25 26
    asgn <st> (76)
        on left: 37 38 39 40
        on right: 7 38 40
    print <st> (77)
        on left: 41
        on right: 8
    read <st> (78)
        on left: 42 43
        on right: 9
    readstring <st> (79)
        on left: 44 45
        on right: 10
    exp <expNode> (80)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 27 28 29 30 31 35 36 37 39 41 48 49 50 51 52 53 54 55 56 57 58 62 63 64 65 66 67 68 69 70 72 74
    listOfExp <parameters> (81)
        on left: 71 72
        on right: 61
    restOfListOfExp <parameters> (82)
        on left: 73 74
        on right: 72 74


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (stmtlist)

    program   go to state 1
    stmtlist  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: stmtlist •
    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    $end  reduce using rule 1 (program)

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 stmtlist: stmtlist error •

    $default  reduce using rule 4 (stmtlist)


State 5

    6 stmt: SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 6

    5 stmt: COMMENT •

    $default  reduce using rule 5 (stmt)


State 7

   41 print: PRINT • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 44


State 8

   42 read: READ • LPAREN VARIABLE RPAREN
   43     | READ • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 45


State 9

   44 readstring: READ_STRING • LPAREN VARIABLE RPAREN
   45           | READ_STRING • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 46


State 10

   22 if: IF • controlSymbol cond THEN stmtlist END_IF
   23   | IF • controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 21 (controlSymbol)

    controlSymbol  go to state 47


State 11

   25 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 21 (controlSymbol)

    controlSymbol  go to state 48


State 12

   26 repeat: REPEAT • controlSymbol stmtlist UNTIL cond

    $default  reduce using rule 21 (controlSymbol)

    controlSymbol  go to state 49


State 13

   27 for: FOR • controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   28    | FOR • controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    $default  reduce using rule 21 (controlSymbol)

    controlSymbol  go to state 50


State 14

   29 cases: CASES • LPAREN exp RPAREN value_list default END_CASES

    LPAREN  shift, and go to state 51


State 15

   24 dowhile: DO • stmtlist WHILE controlSymbol cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 52


State 16

   34 clear: CLEAR • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 17

   35 place: PLACE • LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 54


State 18

   20 block: LETFCURLYBRACKET • stmtlist RIGHTCURLYBRACKET

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 55


State 19

   37 asgn: VARIABLE • ASSIGNMENT exp
   38     | VARIABLE • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 56


State 20

   39 asgn: CONSTANT • ASSIGNMENT exp
   40     | CONSTANT • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 57


State 21

    3 stmtlist: stmtlist stmt •

    $default  reduce using rule 3 (stmtlist)


State 22

   17 stmt: block •

    $default  reduce using rule 17 (stmt)


State 23

   11 stmt: if •

    $default  reduce using rule 11 (stmt)


State 24

   12 stmt: dowhile • SEMICOLON

    SEMICOLON  shift, and go to state 58


State 25

   13 stmt: while •

    $default  reduce using rule 13 (stmt)


State 26

   14 stmt: repeat •

    $default  reduce using rule 14 (stmt)


State 27

   15 stmt: for •

    $default  reduce using rule 15 (stmt)


State 28

   16 stmt: cases •

    $default  reduce using rule 16 (stmt)


State 29

   18 stmt: clear •

    $default  reduce using rule 18 (stmt)


State 30

   19 stmt: place •

    $default  reduce using rule 19 (stmt)


State 31

    7 stmt: asgn • SEMICOLON

    SEMICOLON  shift, and go to state 59


State 32

    8 stmt: print • SEMICOLON

    SEMICOLON  shift, and go to state 60


State 33

    9 stmt: read • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 34

   10 stmt: readstring • SEMICOLON

    SEMICOLON  shift, and go to state 62


State 35

   47 exp: STRING •

    $default  reduce using rule 47 (exp)


State 36

   46 exp: NUMBER •

    $default  reduce using rule 46 (exp)


State 37

   59 exp: VARIABLE •

    $default  reduce using rule 59 (exp)


State 38

   60 exp: CONSTANT •

    $default  reduce using rule 60 (exp)


State 39

   61 exp: BUILTIN • LPAREN listOfExp RPAREN

    LPAREN  shift, and go to state 63


State 40

   70 exp: NOT • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 64


State 41

   55 exp: PLUS • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 65


State 42

   56 exp: MINUS • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 66


State 43

   54 exp: LPAREN • exp RPAREN

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 67


State 44

   41 print: PRINT exp •
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 41 (print)


State 45

   42 read: READ LPAREN • VARIABLE RPAREN
   43     | READ LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 84
    CONSTANT  shift, and go to state 85


State 46

   44 readstring: READ_STRING LPAREN • VARIABLE RPAREN
   45           | READ_STRING LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 86
    CONSTANT  shift, and go to state 87


State 47

   22 if: IF controlSymbol • cond THEN stmtlist END_IF
   23   | IF controlSymbol • cond THEN stmtlist ELSE stmtlist END_IF

    LPAREN  shift, and go to state 88

    cond  go to state 89


State 48

   25 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 88

    cond  go to state 90


State 49

   26 repeat: REPEAT controlSymbol • stmtlist UNTIL cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 91


State 50

   27 for: FOR controlSymbol • VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   28    | FOR controlSymbol • VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    VARIABLE  shift, and go to state 92


State 51

   29 cases: CASES LPAREN • exp RPAREN value_list default END_CASES

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 93


State 52

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   24 dowhile: DO stmtlist • WHILE controlSymbol cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 94
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 53

   34 clear: CLEAR SEMICOLON •

    $default  reduce using rule 34 (clear)


State 54

   35 place: PLACE LPAREN • exp COMMA exp RPAREN SEMICOLON

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 95


State 55

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   20 block: LETFCURLYBRACKET stmtlist • RIGHTCURLYBRACKET

    error              shift, and go to state 4
    SEMICOLON          shift, and go to state 5
    COMMENT            shift, and go to state 6
    PRINT              shift, and go to state 7
    READ               shift, and go to state 8
    READ_STRING        shift, and go to state 9
    IF                 shift, and go to state 10
    WHILE              shift, and go to state 11
    REPEAT             shift, and go to state 12
    FOR                shift, and go to state 13
    CASES              shift, and go to state 14
    DO                 shift, and go to state 15
    CLEAR              shift, and go to state 16
    PLACE              shift, and go to state 17
    LETFCURLYBRACKET   shift, and go to state 18
    RIGHTCURLYBRACKET  shift, and go to state 96
    VARIABLE           shift, and go to state 19
    CONSTANT           shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 56

   37 asgn: VARIABLE ASSIGNMENT • exp
   38     | VARIABLE ASSIGNMENT • asgn

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 97
    CONSTANT  shift, and go to state 98
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    asgn  go to state 99
    exp   go to state 100


State 57

   39 asgn: CONSTANT ASSIGNMENT • exp
   40     | CONSTANT ASSIGNMENT • asgn

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 97
    CONSTANT  shift, and go to state 98
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    asgn  go to state 101
    exp   go to state 102


State 58

   12 stmt: dowhile SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 59

    7 stmt: asgn SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 60

    8 stmt: print SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 61

    9 stmt: read SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 62

   10 stmt: readstring SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 63

   61 exp: BUILTIN LPAREN • listOfExp RPAREN

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    $default  reduce using rule 71 (listOfExp)

    exp        go to state 103
    listOfExp  go to state 104


State 64

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp
   70    | NOT exp •

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    $default  reduce using rule 70 (exp)


State 65

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   55    | PLUS exp •
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 55 (exp)


State 66

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   56    | MINUS exp •
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 56 (exp)


State 67

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   54    | LPAREN exp • RPAREN
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    RPAREN            shift, and go to state 105
    POWER             shift, and go to state 83


State 68

   69 exp: exp OR • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 106


State 69

   68 exp: exp AND • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 107


State 70

   63 exp: exp GREATER_OR_EQUAL • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 108


State 71

   65 exp: exp LESS_OR_EQUAL • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 109


State 72

   62 exp: exp GREATER_THAN • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 110


State 73

   64 exp: exp LESS_THAN • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 111


State 74

   66 exp: exp EQUAL • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 112


State 75

   67 exp: exp NOT_EQUAL • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 113


State 76

   48 exp: exp CONCAT • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 114


State 77

   49 exp: exp PLUS • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 115


State 78

   50 exp: exp MINUS • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 116


State 79

   51 exp: exp MULTIPLICATION • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 117


State 80

   52 exp: exp DIVISION • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 118


State 81

   57 exp: exp MODULO • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 119


State 82

   53 exp: exp INT_DIVISION • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 120


State 83

   58 exp: exp POWER • exp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 121


State 84

   42 read: READ LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 122


State 85

   43 read: READ LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 123


State 86

   44 readstring: READ_STRING LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 124


State 87

   45 readstring: READ_STRING LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 125


State 88

   36 cond: LPAREN • exp RPAREN

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 126


State 89

   22 if: IF controlSymbol cond • THEN stmtlist END_IF
   23   | IF controlSymbol cond • THEN stmtlist ELSE stmtlist END_IF

    THEN  shift, and go to state 127


State 90

   25 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 128


State 91

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   26 repeat: REPEAT controlSymbol stmtlist • UNTIL cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    UNTIL             shift, and go to state 129
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 92

   27 for: FOR controlSymbol VARIABLE • FROM exp UNTIL exp DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE • FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    FROM  shift, and go to state 130


State 93

   29 cases: CASES LPAREN exp • RPAREN value_list default END_CASES
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    RPAREN            shift, and go to state 131
    POWER             shift, and go to state 83


State 94

   24 dowhile: DO stmtlist WHILE • controlSymbol cond
   25 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 21 (controlSymbol)

    controlSymbol  go to state 132


State 95

   35 place: PLACE LPAREN exp • COMMA exp RPAREN SEMICOLON
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    COMMA             shift, and go to state 133
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 96

   20 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET •

    $default  reduce using rule 20 (block)


State 97

   37 asgn: VARIABLE • ASSIGNMENT exp
   38     | VARIABLE • ASSIGNMENT asgn
   59 exp: VARIABLE •

    ASSIGNMENT  shift, and go to state 56

    $default  reduce using rule 59 (exp)


State 98

   39 asgn: CONSTANT • ASSIGNMENT exp
   40     | CONSTANT • ASSIGNMENT asgn
   60 exp: CONSTANT •

    ASSIGNMENT  shift, and go to state 57

    $default  reduce using rule 60 (exp)


State 99

   38 asgn: VARIABLE ASSIGNMENT asgn •

    $default  reduce using rule 38 (asgn)


State 100

   37 asgn: VARIABLE ASSIGNMENT exp •
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 37 (asgn)


State 101

   40 asgn: CONSTANT ASSIGNMENT asgn •

    $default  reduce using rule 40 (asgn)


State 102

   39 asgn: CONSTANT ASSIGNMENT exp •
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 39 (asgn)


State 103

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp
   72 listOfExp: exp • restOfListOfExp

    COMMA             shift, and go to state 134
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 73 (restOfListOfExp)

    restOfListOfExp  go to state 135


State 104

   61 exp: BUILTIN LPAREN listOfExp • RPAREN

    RPAREN  shift, and go to state 136


State 105

   54 exp: LPAREN exp RPAREN •

    $default  reduce using rule 54 (exp)


State 106

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp
   69    | exp OR exp •

    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 69 (exp)


State 107

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   68    | exp AND exp •
   69    | exp • OR exp

    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 68 (exp)


State 108

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   63    | exp GREATER_OR_EQUAL exp •
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 63 (exp)


State 109

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   65    | exp LESS_OR_EQUAL exp •
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 65 (exp)


State 110

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   62    | exp GREATER_THAN exp •
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 62 (exp)


State 111

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   64    | exp LESS_THAN exp •
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 64 (exp)


State 112

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   66    | exp EQUAL exp •
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 66 (exp)


State 113

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   67    | exp NOT_EQUAL exp •
   68    | exp • AND exp
   69    | exp • OR exp

    CONCAT          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 67 (exp)


State 114

   48 exp: exp • CONCAT exp
   48    | exp CONCAT exp •
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    $default  reduce using rule 48 (exp)


State 115

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   49    | exp PLUS exp •
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    $default  reduce using rule 49 (exp)


State 116

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   50    | exp MINUS exp •
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    MULTIPLICATION  shift, and go to state 79
    DIVISION        shift, and go to state 80
    MODULO          shift, and go to state 81
    INT_DIVISION    shift, and go to state 82
    POWER           shift, and go to state 83

    $default  reduce using rule 50 (exp)


State 117

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   51    | exp MULTIPLICATION exp •
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 51 (exp)


State 118

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   52    | exp DIVISION exp •
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 52 (exp)


State 119

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   57    | exp MODULO exp •
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 57 (exp)


State 120

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   53    | exp INT_DIVISION exp •
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 53 (exp)


State 121

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   58    | exp POWER exp •
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    POWER  shift, and go to state 83

    $default  reduce using rule 58 (exp)


State 122

   42 read: READ LPAREN VARIABLE RPAREN •

    $default  reduce using rule 42 (read)


State 123

   43 read: READ LPAREN CONSTANT RPAREN •

    $default  reduce using rule 43 (read)


State 124

   44 readstring: READ_STRING LPAREN VARIABLE RPAREN •

    $default  reduce using rule 44 (readstring)


State 125

   45 readstring: READ_STRING LPAREN CONSTANT RPAREN •

    $default  reduce using rule 45 (readstring)


State 126

   36 cond: LPAREN exp • RPAREN
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    RPAREN            shift, and go to state 137
    POWER             shift, and go to state 83


State 127

   22 if: IF controlSymbol cond THEN • stmtlist END_IF
   23   | IF controlSymbol cond THEN • stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 138


State 128

   25 while: WHILE controlSymbol cond DO • stmtlist END_WHILE

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 139


State 129

   26 repeat: REPEAT controlSymbol stmtlist UNTIL • cond

    LPAREN  shift, and go to state 88

    cond  go to state 140


State 130

   27 for: FOR controlSymbol VARIABLE FROM • exp UNTIL exp DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE FROM • exp UNTIL exp STEP exp DO stmtlist END_FOR

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 141


State 131

   29 cases: CASES LPAREN exp RPAREN • value_list default END_CASES

    VALUE  shift, and go to state 142

    value_list  go to state 143


State 132

   24 dowhile: DO stmtlist WHILE controlSymbol • cond
   25 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 88

    cond  go to state 144


State 133

   35 place: PLACE LPAREN exp COMMA • exp RPAREN SEMICOLON

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 145


State 134

   74 restOfListOfExp: COMMA • exp restOfListOfExp

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 146


State 135

   72 listOfExp: exp restOfListOfExp •

    $default  reduce using rule 72 (listOfExp)


State 136

   61 exp: BUILTIN LPAREN listOfExp RPAREN •

    $default  reduce using rule 61 (exp)


State 137

   36 cond: LPAREN exp RPAREN •

    $default  reduce using rule 36 (cond)


State 138

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   22 if: IF controlSymbol cond THEN stmtlist • END_IF
   23   | IF controlSymbol cond THEN stmtlist • ELSE stmtlist END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    ELSE              shift, and go to state 147
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 148
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 139

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   25 while: WHILE controlSymbol cond DO stmtlist • END_WHILE

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_WHILE         shift, and go to state 149
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 140

   26 repeat: REPEAT controlSymbol stmtlist UNTIL cond •

    $default  reduce using rule 26 (repeat)


State 141

   27 for: FOR controlSymbol VARIABLE FROM exp • UNTIL exp DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE FROM exp • UNTIL exp STEP exp DO stmtlist END_FOR
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    UNTIL             shift, and go to state 150
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 142

   30 value_list: VALUE • exp COLON stmtlist

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 151


State 143

   29 cases: CASES LPAREN exp RPAREN value_list • default END_CASES
   31 value_list: value_list • VALUE exp COLON stmtlist

    VALUE    shift, and go to state 152
    DEFAULT  shift, and go to state 153

    $default  reduce using rule 33 (default)

    default  go to state 154


State 144

   24 dowhile: DO stmtlist WHILE controlSymbol cond •
   25 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 128

    $default  reduce using rule 24 (dowhile)


State 145

   35 place: PLACE LPAREN exp COMMA exp • RPAREN SEMICOLON
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    RPAREN            shift, and go to state 155
    POWER             shift, and go to state 83


State 146

   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp
   74 restOfListOfExp: COMMA exp • restOfListOfExp

    COMMA             shift, and go to state 134
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83

    $default  reduce using rule 73 (restOfListOfExp)

    restOfListOfExp  go to state 156


State 147

   23 if: IF controlSymbol cond THEN stmtlist ELSE • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 157


State 148

   22 if: IF controlSymbol cond THEN stmtlist END_IF •

    $default  reduce using rule 22 (if)


State 149

   25 while: WHILE controlSymbol cond DO stmtlist END_WHILE •

    $default  reduce using rule 25 (while)


State 150

   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL • exp DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE FROM exp UNTIL • exp STEP exp DO stmtlist END_FOR

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 158


State 151

   30 value_list: VALUE exp • COLON stmtlist
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    COLON             shift, and go to state 159
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 152

   31 value_list: value_list VALUE • exp COLON stmtlist

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 160


State 153

   32 default: DEFAULT • COLON stmtlist

    COLON  shift, and go to state 161


State 154

   29 cases: CASES LPAREN exp RPAREN value_list default • END_CASES

    END_CASES  shift, and go to state 162


State 155

   35 place: PLACE LPAREN exp COMMA exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 156

   74 restOfListOfExp: COMMA exp restOfListOfExp •

    $default  reduce using rule 74 (restOfListOfExp)


State 157

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   23 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 164
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 158

   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp • DO stmtlist END_FOR
   28    | FOR controlSymbol VARIABLE FROM exp UNTIL exp • STEP exp DO stmtlist END_FOR
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    STEP              shift, and go to state 165
    DO                shift, and go to state 166
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 159

   30 value_list: VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 167


State 160

   31 value_list: value_list VALUE exp • COLON stmtlist
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    COLON             shift, and go to state 168
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 161

   32 default: DEFAULT COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 169


State 162

   29 cases: CASES LPAREN exp RPAREN value_list default END_CASES •

    $default  reduce using rule 29 (cases)


State 163

   35 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON •

    $default  reduce using rule 35 (place)


State 164

   23 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF •

    $default  reduce using rule 23 (if)


State 165

   28 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP • exp DO stmtlist END_FOR

    STRING    shift, and go to state 35
    NUMBER    shift, and go to state 36
    VARIABLE  shift, and go to state 37
    CONSTANT  shift, and go to state 38
    BUILTIN   shift, and go to state 39
    NOT       shift, and go to state 40
    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    LPAREN    shift, and go to state 43

    exp  go to state 170


State 166

   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 171


State 167

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   30 value_list: VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    VALUE      reduce using rule 30 (value_list)
    DEFAULT    reduce using rule 30 (value_list)
    END_CASES  reduce using rule 30 (value_list)

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 168

   31 value_list: value_list VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 172


State 169

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   32 default: DEFAULT COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    END_CASES  reduce using rule 32 (default)

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 170

   28 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp • DO stmtlist END_FOR
   48 exp: exp • CONCAT exp
   49    | exp • PLUS exp
   50    | exp • MINUS exp
   51    | exp • MULTIPLICATION exp
   52    | exp • DIVISION exp
   53    | exp • INT_DIVISION exp
   57    | exp • MODULO exp
   58    | exp • POWER exp
   62    | exp • GREATER_THAN exp
   63    | exp • GREATER_OR_EQUAL exp
   64    | exp • LESS_THAN exp
   65    | exp • LESS_OR_EQUAL exp
   66    | exp • EQUAL exp
   67    | exp • NOT_EQUAL exp
   68    | exp • AND exp
   69    | exp • OR exp

    DO                shift, and go to state 173
    OR                shift, and go to state 68
    AND               shift, and go to state 69
    GREATER_OR_EQUAL  shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71
    GREATER_THAN      shift, and go to state 72
    LESS_THAN         shift, and go to state 73
    EQUAL             shift, and go to state 74
    NOT_EQUAL         shift, and go to state 75
    CONCAT            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTIPLICATION    shift, and go to state 79
    DIVISION          shift, and go to state 80
    MODULO            shift, and go to state 81
    INT_DIVISION      shift, and go to state 82
    POWER             shift, and go to state 83


State 171

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 174
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 172

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   31 value_list: value_list VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    VALUE      reduce using rule 31 (value_list)
    DEFAULT    reduce using rule 31 (value_list)
    END_CASES  reduce using rule 31 (value_list)

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 173

   28 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 175


State 174

   27 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR •

    $default  reduce using rule 27 (for)


State 175

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   28 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 176
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20

    stmt        go to state 21
    block       go to state 22
    if          go to state 23
    dowhile     go to state 24
    while       go to state 25
    repeat      go to state 26
    for         go to state 27
    cases       go to state 28
    clear       go to state 29
    place       go to state 30
    asgn        go to state 31
    print       go to state 32
    read        go to state 33
    readstring  go to state 34


State 176

   28 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR •

    $default  reduce using rule 28 (for)
