Terminals unused in grammar

    BOOL
    UNDEFINED


Grammar

    0 $accept: program $end

    1 program: stmtlist

    2 stmtlist: ε
    3         | stmtlist stmt
    4         | stmtlist error

    5 stmt: COMMENT
    6     | SEMICOLON
    7     | asgn SEMICOLON
    8     | preincstmt SEMICOLON
    9     | postincstmt SEMICOLON
   10     | predecstmt SEMICOLON
   11     | postdecstmt SEMICOLON
   12     | print SEMICOLON
   13     | read SEMICOLON
   14     | readstring SEMICOLON
   15     | if
   16     | dowhile SEMICOLON
   17     | while
   18     | repeat
   19     | for
   20     | cases
   21     | block
   22     | clear
   23     | place

   24 preincstmt: INCREMENT VARIABLE

   25 postincstmt: VARIABLE INCREMENT

   26 predecstmt: DECREMENT VARIABLE

   27 postdecstmt: VARIABLE DECREMENT

   28 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET

   29 controlSymbol: ε

   30 if: IF controlSymbol cond THEN stmtlist END_IF
   31   | IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

   32 dowhile: DO controlSymbol stmtlist WHILE controlSymbol cond

   33 while: WHILE controlSymbol cond DO stmtlist END_WHILE

   34 repeat: REPEAT controlSymbol stmtlist UNTIL cond

   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

   37 cases: CASES LPAREN exp RPAREN value_list default END_CASES

   38 value_list: VALUE exp COLON stmtlist
   39           | value_list VALUE exp COLON stmtlist

   40 default: DEFAULT COLON stmtlist
   41        | ε

   42 clear: CLEAR SEMICOLON

   43 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON

   44 cond: LPAREN exp RPAREN

   45 asgn: VARIABLE ASSIGNMENT exp
   46     | VARIABLE ASSIGNMENT asgn
   47     | CONSTANT ASSIGNMENT exp
   48     | CONSTANT ASSIGNMENT asgn

   49 print: PRINT exp

   50 read: READ LPAREN VARIABLE RPAREN
   51     | READ LPAREN CONSTANT RPAREN

   52 readstring: READ_STRING LPAREN VARIABLE RPAREN
   53           | READ_STRING LPAREN CONSTANT RPAREN

   54 exp: NUMBER
   55    | STRING
   56    | exp CONCAT exp
   57    | exp PLUS exp
   58    | exp MINUS exp
   59    | exp MULTIPLICATION exp
   60    | exp DIVISION exp
   61    | exp INT_DIVISION exp
   62    | LPAREN exp RPAREN
   63    | PLUS exp
   64    | MINUS exp
   65    | preinc
   66    | postinc
   67    | predec
   68    | postdec
   69    | exp MODULO exp
   70    | exp POWER exp
   71    | VARIABLE
   72    | CONSTANT
   73    | BUILTIN LPAREN listOfExp RPAREN
   74    | exp GREATER_THAN exp
   75    | exp GREATER_OR_EQUAL exp
   76    | exp LESS_THAN exp
   77    | exp LESS_OR_EQUAL exp
   78    | exp EQUAL exp
   79    | exp NOT_EQUAL exp
   80    | exp AND exp
   81    | exp OR exp
   82    | NOT exp

   83 preinc: INCREMENT VARIABLE

   84 postinc: VARIABLE INCREMENT

   85 predec: DECREMENT VARIABLE

   86 postdec: VARIABLE DECREMENT

   87 listOfExp: ε
   88          | exp restOfListOfExp

   89 restOfListOfExp: ε
   90                | COMMA exp restOfListOfExp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    SEMICOLON (258) 6 7 8 9 10 11 12 13 14 16 42 43
    COLON (259) 38 39 40
    COMMENT <comentario> (260) 5
    PRINT (261) 49
    READ (262) 50 51
    READ_STRING (263) 52 53
    IF (264) 30 31
    ELSE (265) 31
    WHILE (266) 32 33
    THEN (267) 30 31
    END_IF (268) 30 31
    END_WHILE (269) 33
    REPEAT (270) 34
    FOR (271) 35 36
    FROM (272) 35 36
    UNTIL (273) 34 35 36
    END_FOR (274) 35 36
    STEP (275) 36
    CASES (276) 37
    VALUE (277) 38 39
    DEFAULT (278) 40
    END_CASES (279) 37
    DO (280) 32 33 35 36
    CLEAR (281) 42
    PLACE (282) 43
    LETFCURLYBRACKET (283) 28
    RIGHTCURLYBRACKET (284) 28
    ASSIGNMENT (285) 45 46 47 48
    COMMA (286) 43 90
    STRING <cadena> (287) 55
    NUMBER <number> (288) 54
    BOOL <logic> (289)
    VARIABLE <string> (290) 24 25 26 27 35 36 45 46 50 52 71 83 84 85 86
    UNDEFINED <string> (291)
    CONSTANT <string> (292) 47 48 51 53 72
    BUILTIN <string> (293) 73
    OR (294) 81
    AND (295) 80
    GREATER_OR_EQUAL (296) 75
    LESS_OR_EQUAL (297) 77
    GREATER_THAN (298) 74
    LESS_THAN (299) 76
    EQUAL (300) 78
    NOT_EQUAL (301) 79
    NOT (302) 82
    CONCAT (303) 56
    PLUS (304) 57 63
    MINUS (305) 58 64
    MULTIPLICATION (306) 59
    DIVISION (307) 60
    MODULO (308) 69
    INT_DIVISION (309) 61
    LPAREN (310) 37 43 44 50 51 52 53 62 73
    RPAREN (311) 37 43 44 50 51 52 53 62 73
    UNARY (312)
    INCREMENT (313) 24 25 83 84
    DECREMENT (314) 26 27 85 86
    POWER (315) 70


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    program <prog> (62)
        on left: 1
        on right: 0
    stmtlist <stmts> (63)
        on left: 2 3 4
        on right: 1 3 4 28 30 31 32 33 34 35 36 38 39 40
    stmt <st> (64)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 3
    preincstmt <st> (65)
        on left: 24
        on right: 8
    postincstmt <st> (66)
        on left: 25
        on right: 9
    predecstmt <st> (67)
        on left: 26
        on right: 10
    postdecstmt <st> (68)
        on left: 27
        on right: 11
    block <st> (69)
        on left: 28
        on right: 21
    controlSymbol (70)
        on left: 29
        on right: 30 31 32 33 34 35 36
    if <st> (71)
        on left: 30 31
        on right: 15
    dowhile <st> (72)
        on left: 32
        on right: 16
    while <st> (73)
        on left: 33
        on right: 17
    repeat <st> (74)
        on left: 34
        on right: 18
    for <st> (75)
        on left: 35 36
        on right: 19
    cases <st> (76)
        on left: 37
        on right: 20
    value_list <valuestmts> (77)
        on left: 38 39
        on right: 37 39
    default <st> (78)
        on left: 40 41
        on right: 37
    clear <st> (79)
        on left: 42
        on right: 22
    place <st> (80)
        on left: 43
        on right: 23
    cond <expNode> (81)
        on left: 44
        on right: 30 31 32 33 34
    asgn <st> (82)
        on left: 45 46 47 48
        on right: 7 46 48
    print <st> (83)
        on left: 49
        on right: 12
    read <st> (84)
        on left: 50 51
        on right: 13
    readstring <st> (85)
        on left: 52 53
        on right: 14
    exp <expNode> (86)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
        on right: 35 36 37 38 39 43 44 45 47 49 56 57 58 59 60 61 62 63 64 69 70 74 75 76 77 78 79 80 81 82 88 90
    preinc <expNode> (87)
        on left: 83
        on right: 65
    postinc <expNode> (88)
        on left: 84
        on right: 66
    predec <expNode> (89)
        on left: 85
        on right: 67
    postdec <expNode> (90)
        on left: 86
        on right: 68
    listOfExp <parameters> (91)
        on left: 87 88
        on right: 73
    restOfListOfExp <parameters> (92)
        on left: 89 90
        on right: 88 90


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (stmtlist)

    program   go to state 1
    stmtlist  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: stmtlist •
    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    $end  reduce using rule 1 (program)

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 stmtlist: stmtlist error •

    $default  reduce using rule 4 (stmtlist)


State 5

    6 stmt: SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 6

    5 stmt: COMMENT •

    $default  reduce using rule 5 (stmt)


State 7

   49 print: PRINT • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 52
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 8

   50 read: READ • LPAREN VARIABLE RPAREN
   51     | READ • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 57


State 9

   52 readstring: READ_STRING • LPAREN VARIABLE RPAREN
   53           | READ_STRING • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 58


State 10

   30 if: IF • controlSymbol cond THEN stmtlist END_IF
   31   | IF • controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 59


State 11

   33 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 60


State 12

   34 repeat: REPEAT • controlSymbol stmtlist UNTIL cond

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 61


State 13

   35 for: FOR • controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   36    | FOR • controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 62


State 14

   37 cases: CASES • LPAREN exp RPAREN value_list default END_CASES

    LPAREN  shift, and go to state 63


State 15

   32 dowhile: DO • controlSymbol stmtlist WHILE controlSymbol cond

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 64


State 16

   42 clear: CLEAR • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 17

   43 place: PLACE • LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 66


State 18

   28 block: LETFCURLYBRACKET • stmtlist RIGHTCURLYBRACKET

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 67


State 19

   25 postincstmt: VARIABLE • INCREMENT
   27 postdecstmt: VARIABLE • DECREMENT
   45 asgn: VARIABLE • ASSIGNMENT exp
   46     | VARIABLE • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 68
    INCREMENT   shift, and go to state 69
    DECREMENT   shift, and go to state 70


State 20

   47 asgn: CONSTANT • ASSIGNMENT exp
   48     | CONSTANT • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 71


State 21

   24 preincstmt: INCREMENT • VARIABLE

    VARIABLE  shift, and go to state 72


State 22

   26 predecstmt: DECREMENT • VARIABLE

    VARIABLE  shift, and go to state 73


State 23

    3 stmtlist: stmtlist stmt •

    $default  reduce using rule 3 (stmtlist)


State 24

    8 stmt: preincstmt • SEMICOLON

    SEMICOLON  shift, and go to state 74


State 25

    9 stmt: postincstmt • SEMICOLON

    SEMICOLON  shift, and go to state 75


State 26

   10 stmt: predecstmt • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 27

   11 stmt: postdecstmt • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 28

   21 stmt: block •

    $default  reduce using rule 21 (stmt)


State 29

   15 stmt: if •

    $default  reduce using rule 15 (stmt)


State 30

   16 stmt: dowhile • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 31

   17 stmt: while •

    $default  reduce using rule 17 (stmt)


State 32

   18 stmt: repeat •

    $default  reduce using rule 18 (stmt)


State 33

   19 stmt: for •

    $default  reduce using rule 19 (stmt)


State 34

   20 stmt: cases •

    $default  reduce using rule 20 (stmt)


State 35

   22 stmt: clear •

    $default  reduce using rule 22 (stmt)


State 36

   23 stmt: place •

    $default  reduce using rule 23 (stmt)


State 37

    7 stmt: asgn • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 38

   12 stmt: print • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 39

   13 stmt: read • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 40

   14 stmt: readstring • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 41

   55 exp: STRING •

    $default  reduce using rule 55 (exp)


State 42

   54 exp: NUMBER •

    $default  reduce using rule 54 (exp)


State 43

   71 exp: VARIABLE •
   84 postinc: VARIABLE • INCREMENT
   86 postdec: VARIABLE • DECREMENT

    INCREMENT  shift, and go to state 83
    DECREMENT  shift, and go to state 84

    $default  reduce using rule 71 (exp)


State 44

   72 exp: CONSTANT •

    $default  reduce using rule 72 (exp)


State 45

   73 exp: BUILTIN • LPAREN listOfExp RPAREN

    LPAREN  shift, and go to state 85


State 46

   82 exp: NOT • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 86
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 47

   63 exp: PLUS • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 87
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 48

   64 exp: MINUS • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 88
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 49

   62 exp: LPAREN • exp RPAREN

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 89
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 50

   83 preinc: INCREMENT • VARIABLE

    VARIABLE  shift, and go to state 90


State 51

   85 predec: DECREMENT • VARIABLE

    VARIABLE  shift, and go to state 91


State 52

   49 print: PRINT exp •
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 49 (print)


State 53

   65 exp: preinc •

    $default  reduce using rule 65 (exp)


State 54

   66 exp: postinc •

    $default  reduce using rule 66 (exp)


State 55

   67 exp: predec •

    $default  reduce using rule 67 (exp)


State 56

   68 exp: postdec •

    $default  reduce using rule 68 (exp)


State 57

   50 read: READ LPAREN • VARIABLE RPAREN
   51     | READ LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 108
    CONSTANT  shift, and go to state 109


State 58

   52 readstring: READ_STRING LPAREN • VARIABLE RPAREN
   53           | READ_STRING LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 110
    CONSTANT  shift, and go to state 111


State 59

   30 if: IF controlSymbol • cond THEN stmtlist END_IF
   31   | IF controlSymbol • cond THEN stmtlist ELSE stmtlist END_IF

    LPAREN  shift, and go to state 112

    cond  go to state 113


State 60

   33 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 112

    cond  go to state 114


State 61

   34 repeat: REPEAT controlSymbol • stmtlist UNTIL cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 115


State 62

   35 for: FOR controlSymbol • VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   36    | FOR controlSymbol • VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    VARIABLE  shift, and go to state 116


State 63

   37 cases: CASES LPAREN • exp RPAREN value_list default END_CASES

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 117
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 64

   32 dowhile: DO controlSymbol • stmtlist WHILE controlSymbol cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 118


State 65

   42 clear: CLEAR SEMICOLON •

    $default  reduce using rule 42 (clear)


State 66

   43 place: PLACE LPAREN • exp COMMA exp RPAREN SEMICOLON

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 119
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 67

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   28 block: LETFCURLYBRACKET stmtlist • RIGHTCURLYBRACKET

    error              shift, and go to state 4
    SEMICOLON          shift, and go to state 5
    COMMENT            shift, and go to state 6
    PRINT              shift, and go to state 7
    READ               shift, and go to state 8
    READ_STRING        shift, and go to state 9
    IF                 shift, and go to state 10
    WHILE              shift, and go to state 11
    REPEAT             shift, and go to state 12
    FOR                shift, and go to state 13
    CASES              shift, and go to state 14
    DO                 shift, and go to state 15
    CLEAR              shift, and go to state 16
    PLACE              shift, and go to state 17
    LETFCURLYBRACKET   shift, and go to state 18
    RIGHTCURLYBRACKET  shift, and go to state 120
    VARIABLE           shift, and go to state 19
    CONSTANT           shift, and go to state 20
    INCREMENT          shift, and go to state 21
    DECREMENT          shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 68

   45 asgn: VARIABLE ASSIGNMENT • exp
   46     | VARIABLE ASSIGNMENT • asgn

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 121
    CONSTANT   shift, and go to state 122
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    asgn     go to state 123
    exp      go to state 124
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 69

   25 postincstmt: VARIABLE INCREMENT •

    $default  reduce using rule 25 (postincstmt)


State 70

   27 postdecstmt: VARIABLE DECREMENT •

    $default  reduce using rule 27 (postdecstmt)


State 71

   47 asgn: CONSTANT ASSIGNMENT • exp
   48     | CONSTANT ASSIGNMENT • asgn

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 121
    CONSTANT   shift, and go to state 122
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    asgn     go to state 125
    exp      go to state 126
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 72

   24 preincstmt: INCREMENT VARIABLE •

    $default  reduce using rule 24 (preincstmt)


State 73

   26 predecstmt: DECREMENT VARIABLE •

    $default  reduce using rule 26 (predecstmt)


State 74

    8 stmt: preincstmt SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 75

    9 stmt: postincstmt SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 76

   10 stmt: predecstmt SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 77

   11 stmt: postdecstmt SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 78

   16 stmt: dowhile SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 79

    7 stmt: asgn SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 80

   12 stmt: print SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 81

   13 stmt: read SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 82

   14 stmt: readstring SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 83

   84 postinc: VARIABLE INCREMENT •

    $default  reduce using rule 84 (postinc)


State 84

   86 postdec: VARIABLE DECREMENT •

    $default  reduce using rule 86 (postdec)


State 85

   73 exp: BUILTIN LPAREN • listOfExp RPAREN

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    $default  reduce using rule 87 (listOfExp)

    exp        go to state 127
    preinc     go to state 53
    postinc    go to state 54
    predec     go to state 55
    postdec    go to state 56
    listOfExp  go to state 128


State 86

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp
   82    | NOT exp •

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    $default  reduce using rule 82 (exp)


State 87

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   63    | PLUS exp •
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 63 (exp)


State 88

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   64    | MINUS exp •
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 64 (exp)


State 89

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   62    | LPAREN exp • RPAREN
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    RPAREN            shift, and go to state 129
    POWER             shift, and go to state 107


State 90

   83 preinc: INCREMENT VARIABLE •

    $default  reduce using rule 83 (preinc)


State 91

   85 predec: DECREMENT VARIABLE •

    $default  reduce using rule 85 (predec)


State 92

   81 exp: exp OR • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 130
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 93

   80 exp: exp AND • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 131
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 94

   75 exp: exp GREATER_OR_EQUAL • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 132
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 95

   77 exp: exp LESS_OR_EQUAL • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 133
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 96

   74 exp: exp GREATER_THAN • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 134
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 97

   76 exp: exp LESS_THAN • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 135
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 98

   78 exp: exp EQUAL • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 136
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 99

   79 exp: exp NOT_EQUAL • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 137
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 100

   56 exp: exp CONCAT • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 138
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 101

   57 exp: exp PLUS • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 139
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 102

   58 exp: exp MINUS • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 140
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 103

   59 exp: exp MULTIPLICATION • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 141
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 104

   60 exp: exp DIVISION • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 142
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 105

   69 exp: exp MODULO • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 143
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 106

   61 exp: exp INT_DIVISION • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 144
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 107

   70 exp: exp POWER • exp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 145
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 108

   50 read: READ LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 146


State 109

   51 read: READ LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 147


State 110

   52 readstring: READ_STRING LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 148


State 111

   53 readstring: READ_STRING LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 149


State 112

   44 cond: LPAREN • exp RPAREN

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 150
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 113

   30 if: IF controlSymbol cond • THEN stmtlist END_IF
   31   | IF controlSymbol cond • THEN stmtlist ELSE stmtlist END_IF

    THEN  shift, and go to state 151


State 114

   33 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 152


State 115

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   34 repeat: REPEAT controlSymbol stmtlist • UNTIL cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    UNTIL             shift, and go to state 153
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 116

   35 for: FOR controlSymbol VARIABLE • FROM exp UNTIL exp DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE • FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    FROM  shift, and go to state 154


State 117

   37 cases: CASES LPAREN exp • RPAREN value_list default END_CASES
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    RPAREN            shift, and go to state 155
    POWER             shift, and go to state 107


State 118

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   32 dowhile: DO controlSymbol stmtlist • WHILE controlSymbol cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 156
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 119

   43 place: PLACE LPAREN exp • COMMA exp RPAREN SEMICOLON
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    COMMA             shift, and go to state 157
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 120

   28 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET •

    $default  reduce using rule 28 (block)


State 121

   45 asgn: VARIABLE • ASSIGNMENT exp
   46     | VARIABLE • ASSIGNMENT asgn
   71 exp: VARIABLE •
   84 postinc: VARIABLE • INCREMENT
   86 postdec: VARIABLE • DECREMENT

    ASSIGNMENT  shift, and go to state 68
    INCREMENT   shift, and go to state 83
    DECREMENT   shift, and go to state 84

    $default  reduce using rule 71 (exp)


State 122

   47 asgn: CONSTANT • ASSIGNMENT exp
   48     | CONSTANT • ASSIGNMENT asgn
   72 exp: CONSTANT •

    ASSIGNMENT  shift, and go to state 71

    $default  reduce using rule 72 (exp)


State 123

   46 asgn: VARIABLE ASSIGNMENT asgn •

    $default  reduce using rule 46 (asgn)


State 124

   45 asgn: VARIABLE ASSIGNMENT exp •
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 45 (asgn)


State 125

   48 asgn: CONSTANT ASSIGNMENT asgn •

    $default  reduce using rule 48 (asgn)


State 126

   47 asgn: CONSTANT ASSIGNMENT exp •
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 47 (asgn)


State 127

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp
   88 listOfExp: exp • restOfListOfExp

    COMMA             shift, and go to state 158
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 89 (restOfListOfExp)

    restOfListOfExp  go to state 159


State 128

   73 exp: BUILTIN LPAREN listOfExp • RPAREN

    RPAREN  shift, and go to state 160


State 129

   62 exp: LPAREN exp RPAREN •

    $default  reduce using rule 62 (exp)


State 130

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp
   81    | exp OR exp •

    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 81 (exp)


State 131

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   80    | exp AND exp •
   81    | exp • OR exp

    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 80 (exp)


State 132

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   75    | exp GREATER_OR_EQUAL exp •
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 75 (exp)


State 133

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   77    | exp LESS_OR_EQUAL exp •
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 77 (exp)


State 134

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   74    | exp GREATER_THAN exp •
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 74 (exp)


State 135

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   76    | exp LESS_THAN exp •
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 76 (exp)


State 136

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   78    | exp EQUAL exp •
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 78 (exp)


State 137

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   79    | exp NOT_EQUAL exp •
   80    | exp • AND exp
   81    | exp • OR exp

    CONCAT          shift, and go to state 100
    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 79 (exp)


State 138

   56 exp: exp • CONCAT exp
   56    | exp CONCAT exp •
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    $default  reduce using rule 56 (exp)


State 139

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   57    | exp PLUS exp •
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    $default  reduce using rule 57 (exp)


State 140

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   58    | exp MINUS exp •
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105
    INT_DIVISION    shift, and go to state 106
    POWER           shift, and go to state 107

    $default  reduce using rule 58 (exp)


State 141

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   59    | exp MULTIPLICATION exp •
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 59 (exp)


State 142

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   60    | exp DIVISION exp •
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 60 (exp)


State 143

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   69    | exp MODULO exp •
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 69 (exp)


State 144

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   61    | exp INT_DIVISION exp •
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 61 (exp)


State 145

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   70    | exp POWER exp •
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    POWER  shift, and go to state 107

    $default  reduce using rule 70 (exp)


State 146

   50 read: READ LPAREN VARIABLE RPAREN •

    $default  reduce using rule 50 (read)


State 147

   51 read: READ LPAREN CONSTANT RPAREN •

    $default  reduce using rule 51 (read)


State 148

   52 readstring: READ_STRING LPAREN VARIABLE RPAREN •

    $default  reduce using rule 52 (readstring)


State 149

   53 readstring: READ_STRING LPAREN CONSTANT RPAREN •

    $default  reduce using rule 53 (readstring)


State 150

   44 cond: LPAREN exp • RPAREN
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    RPAREN            shift, and go to state 161
    POWER             shift, and go to state 107


State 151

   30 if: IF controlSymbol cond THEN • stmtlist END_IF
   31   | IF controlSymbol cond THEN • stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 162


State 152

   33 while: WHILE controlSymbol cond DO • stmtlist END_WHILE

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 163


State 153

   34 repeat: REPEAT controlSymbol stmtlist UNTIL • cond

    LPAREN  shift, and go to state 112

    cond  go to state 164


State 154

   35 for: FOR controlSymbol VARIABLE FROM • exp UNTIL exp DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE FROM • exp UNTIL exp STEP exp DO stmtlist END_FOR

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 165
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 155

   37 cases: CASES LPAREN exp RPAREN • value_list default END_CASES

    VALUE  shift, and go to state 166

    value_list  go to state 167


State 156

   32 dowhile: DO controlSymbol stmtlist WHILE • controlSymbol cond
   33 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 29 (controlSymbol)

    controlSymbol  go to state 168


State 157

   43 place: PLACE LPAREN exp COMMA • exp RPAREN SEMICOLON

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 169
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 158

   90 restOfListOfExp: COMMA • exp restOfListOfExp

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 170
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 159

   88 listOfExp: exp restOfListOfExp •

    $default  reduce using rule 88 (listOfExp)


State 160

   73 exp: BUILTIN LPAREN listOfExp RPAREN •

    $default  reduce using rule 73 (exp)


State 161

   44 cond: LPAREN exp RPAREN •

    $default  reduce using rule 44 (cond)


State 162

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   30 if: IF controlSymbol cond THEN stmtlist • END_IF
   31   | IF controlSymbol cond THEN stmtlist • ELSE stmtlist END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    ELSE              shift, and go to state 171
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 172
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 163

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   33 while: WHILE controlSymbol cond DO stmtlist • END_WHILE

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_WHILE         shift, and go to state 173
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 164

   34 repeat: REPEAT controlSymbol stmtlist UNTIL cond •

    $default  reduce using rule 34 (repeat)


State 165

   35 for: FOR controlSymbol VARIABLE FROM exp • UNTIL exp DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE FROM exp • UNTIL exp STEP exp DO stmtlist END_FOR
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    UNTIL             shift, and go to state 174
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 166

   38 value_list: VALUE • exp COLON stmtlist

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 175
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 167

   37 cases: CASES LPAREN exp RPAREN value_list • default END_CASES
   39 value_list: value_list • VALUE exp COLON stmtlist

    VALUE    shift, and go to state 176
    DEFAULT  shift, and go to state 177

    $default  reduce using rule 41 (default)

    default  go to state 178


State 168

   32 dowhile: DO controlSymbol stmtlist WHILE controlSymbol • cond
   33 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 112

    cond  go to state 179


State 169

   43 place: PLACE LPAREN exp COMMA exp • RPAREN SEMICOLON
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    RPAREN            shift, and go to state 180
    POWER             shift, and go to state 107


State 170

   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp
   90 restOfListOfExp: COMMA exp • restOfListOfExp

    COMMA             shift, and go to state 158
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107

    $default  reduce using rule 89 (restOfListOfExp)

    restOfListOfExp  go to state 181


State 171

   31 if: IF controlSymbol cond THEN stmtlist ELSE • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 182


State 172

   30 if: IF controlSymbol cond THEN stmtlist END_IF •

    $default  reduce using rule 30 (if)


State 173

   33 while: WHILE controlSymbol cond DO stmtlist END_WHILE •

    $default  reduce using rule 33 (while)


State 174

   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL • exp DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE FROM exp UNTIL • exp STEP exp DO stmtlist END_FOR

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 183
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 175

   38 value_list: VALUE exp • COLON stmtlist
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    COLON             shift, and go to state 184
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 176

   39 value_list: value_list VALUE • exp COLON stmtlist

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 185
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 177

   40 default: DEFAULT • COLON stmtlist

    COLON  shift, and go to state 186


State 178

   37 cases: CASES LPAREN exp RPAREN value_list default • END_CASES

    END_CASES  shift, and go to state 187


State 179

   32 dowhile: DO controlSymbol stmtlist WHILE controlSymbol cond •
   33 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 152

    $default  reduce using rule 32 (dowhile)


State 180

   43 place: PLACE LPAREN exp COMMA exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 188


State 181

   90 restOfListOfExp: COMMA exp restOfListOfExp •

    $default  reduce using rule 90 (restOfListOfExp)


State 182

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   31 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 189
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 183

   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp • DO stmtlist END_FOR
   36    | FOR controlSymbol VARIABLE FROM exp UNTIL exp • STEP exp DO stmtlist END_FOR
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    STEP              shift, and go to state 190
    DO                shift, and go to state 191
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 184

   38 value_list: VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 192


State 185

   39 value_list: value_list VALUE exp • COLON stmtlist
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    COLON             shift, and go to state 193
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 186

   40 default: DEFAULT COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 194


State 187

   37 cases: CASES LPAREN exp RPAREN value_list default END_CASES •

    $default  reduce using rule 37 (cases)


State 188

   43 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON •

    $default  reduce using rule 43 (place)


State 189

   31 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF •

    $default  reduce using rule 31 (if)


State 190

   36 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP • exp DO stmtlist END_FOR

    STRING     shift, and go to state 41
    NUMBER     shift, and go to state 42
    VARIABLE   shift, and go to state 43
    CONSTANT   shift, and go to state 44
    BUILTIN    shift, and go to state 45
    NOT        shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    LPAREN     shift, and go to state 49
    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    exp      go to state 195
    preinc   go to state 53
    postinc  go to state 54
    predec   go to state 55
    postdec  go to state 56


State 191

   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 196


State 192

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   38 value_list: VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    VALUE      reduce using rule 38 (value_list)
    DEFAULT    reduce using rule 38 (value_list)
    END_CASES  reduce using rule 38 (value_list)

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 193

   39 value_list: value_list VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 197


State 194

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   40 default: DEFAULT COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    END_CASES  reduce using rule 40 (default)

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 195

   36 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp • DO stmtlist END_FOR
   56 exp: exp • CONCAT exp
   57    | exp • PLUS exp
   58    | exp • MINUS exp
   59    | exp • MULTIPLICATION exp
   60    | exp • DIVISION exp
   61    | exp • INT_DIVISION exp
   69    | exp • MODULO exp
   70    | exp • POWER exp
   74    | exp • GREATER_THAN exp
   75    | exp • GREATER_OR_EQUAL exp
   76    | exp • LESS_THAN exp
   77    | exp • LESS_OR_EQUAL exp
   78    | exp • EQUAL exp
   79    | exp • NOT_EQUAL exp
   80    | exp • AND exp
   81    | exp • OR exp

    DO                shift, and go to state 198
    OR                shift, and go to state 92
    AND               shift, and go to state 93
    GREATER_OR_EQUAL  shift, and go to state 94
    LESS_OR_EQUAL     shift, and go to state 95
    GREATER_THAN      shift, and go to state 96
    LESS_THAN         shift, and go to state 97
    EQUAL             shift, and go to state 98
    NOT_EQUAL         shift, and go to state 99
    CONCAT            shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    INT_DIVISION      shift, and go to state 106
    POWER             shift, and go to state 107


State 196

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 199
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 197

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   39 value_list: value_list VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    VALUE      reduce using rule 39 (value_list)
    DEFAULT    reduce using rule 39 (value_list)
    END_CASES  reduce using rule 39 (value_list)

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 198

   36 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 200


State 199

   35 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR •

    $default  reduce using rule 35 (for)


State 200

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   36 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 201
    CASES             shift, and go to state 14
    DO                shift, and go to state 15
    CLEAR             shift, and go to state 16
    PLACE             shift, and go to state 17
    LETFCURLYBRACKET  shift, and go to state 18
    VARIABLE          shift, and go to state 19
    CONSTANT          shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22

    stmt         go to state 23
    preincstmt   go to state 24
    postincstmt  go to state 25
    predecstmt   go to state 26
    postdecstmt  go to state 27
    block        go to state 28
    if           go to state 29
    dowhile      go to state 30
    while        go to state 31
    repeat       go to state 32
    for          go to state 33
    cases        go to state 34
    clear        go to state 35
    place        go to state 36
    asgn         go to state 37
    print        go to state 38
    read         go to state 39
    readstring   go to state 40


State 201

   36 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR •

    $default  reduce using rule 36 (for)
