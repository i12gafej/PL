Terminals unused in grammar

    BOOL
    UNDEFINED
    INT_DIVISION


Grammar

    0 $accept: program $end

    1 program: stmtlist

    2 stmtlist: ε
    3         | stmtlist stmt
    4         | stmtlist error

    5 stmt: COMMENT
    6     | SEMICOLON
    7     | asgn SEMICOLON
    8     | print SEMICOLON
    9     | read SEMICOLON
   10     | readstring SEMICOLON
   11     | if
   12     | while
   13     | repeat
   14     | for
   15     | forstep
   16     | cases
   17     | block

   18 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET

   19 controlSymbol: ε

   20 if: IF controlSymbol cond THEN stmtlist END_IF
   21   | IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

   22 while: WHILE controlSymbol cond DO stmtlist END_WHILE

   23 repeat: REPEAT stmtlist UNTIL controlSymbol cond

   24 for: FOR VARIABLE FROM NUMBER UNTIL NUMBER DO stmtlist END_FOR

   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR

   26 cases: CASES LPAREN exp RPAREN value_list default END_CASES

   27 value_stmt: VALUE exp COLON stmtlist

   28 value_list: value_stmt value_list
   29           | value_stmt

   30 default: DEFAULT COLON stmtlist
   31        | ε

   32 cond: LPAREN exp RPAREN

   33 asgn: VARIABLE ASSIGNMENT exp
   34     | VARIABLE ASSIGNMENT asgn
   35     | CONSTANT ASSIGNMENT exp
   36     | CONSTANT ASSIGNMENT asgn

   37 print: PRINT exp

   38 read: READ LPAREN VARIABLE RPAREN
   39     | READ LPAREN CONSTANT RPAREN

   40 readstring: READ_STRING LPAREN VARIABLE RPAREN
   41           | READ_STRING LPAREN CONSTANT RPAREN

   42 exp: NUMBER
   43    | STRING
   44    | exp CONCAT exp
   45    | exp PLUS exp
   46    | exp MINUS exp
   47    | exp MULTIPLICATION exp
   48    | exp DIVISION exp
   49    | LPAREN exp RPAREN
   50    | PLUS exp
   51    | MINUS exp
   52    | exp MODULO exp
   53    | exp POWER exp
   54    | VARIABLE
   55    | CONSTANT
   56    | BUILTIN LPAREN listOfExp RPAREN
   57    | exp GREATER_THAN exp
   58    | exp GREATER_OR_EQUAL exp
   59    | exp LESS_THAN exp
   60    | exp LESS_OR_EQUAL exp
   61    | exp EQUAL exp
   62    | exp NOT_EQUAL exp
   63    | exp AND exp
   64    | exp OR exp
   65    | NOT exp

   66 listOfExp: ε
   67          | exp restOfListOfExp

   68 restOfListOfExp: ε
   69                | COMMA exp restOfListOfExp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    SEMICOLON (258) 6 7 8 9 10
    COLON (259) 27 30
    COMMENT <comentario> (260) 5
    PRINT (261) 37
    READ (262) 38 39
    READ_STRING (263) 40 41
    IF (264) 20 21
    ELSE (265) 21
    WHILE (266) 22
    THEN (267) 20 21
    END_IF (268) 20 21
    END_WHILE (269) 22
    REPEAT (270) 23
    FOR (271) 24 25
    FROM (272) 24 25
    UNTIL (273) 23 24 25
    END_FOR (274) 24 25
    STEP (275) 25
    CASES (276) 26
    VALUE (277) 27
    DEFAULT (278) 30
    END_CASES (279) 26
    DO (280) 22 24 25
    LETFCURLYBRACKET (281) 18
    RIGHTCURLYBRACKET (282) 18
    ASSIGNMENT (283) 33 34 35 36
    COMMA (284) 69
    STRING <cadena> (285) 43
    NUMBER <number> (286) 24 25 42
    BOOL <logic> (287)
    VARIABLE <string> (288) 24 25 33 34 38 40 54
    UNDEFINED <string> (289)
    CONSTANT <string> (290) 35 36 39 41 55
    BUILTIN <string> (291) 56
    OR (292) 64
    AND (293) 63
    GREATER_OR_EQUAL (294) 58
    LESS_OR_EQUAL (295) 60
    GREATER_THAN (296) 57
    LESS_THAN (297) 59
    EQUAL (298) 61
    NOT_EQUAL (299) 62
    NOT (300) 65
    CONCAT (301) 44
    PLUS (302) 45 50
    MINUS (303) 46 51
    MULTIPLICATION (304) 47
    DIVISION (305) 48
    MODULO (306) 52
    INT_DIVISION (307)
    LPAREN (308) 26 32 38 39 40 41 49 56
    RPAREN (309) 26 32 38 39 40 41 49 56
    UNARY (310)
    POWER (311) 53


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program <prog> (58)
        on left: 1
        on right: 0
    stmtlist <stmts> (59)
        on left: 2 3 4
        on right: 1 3 4 18 20 21 22 23 24 25 27 30
    stmt <st> (60)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 3
    block <st> (61)
        on left: 18
        on right: 17
    controlSymbol (62)
        on left: 19
        on right: 20 21 22 23
    if <st> (63)
        on left: 20 21
        on right: 11
    while <st> (64)
        on left: 22
        on right: 12
    repeat <st> (65)
        on left: 23
        on right: 13
    for <st> (66)
        on left: 24
        on right: 14
    forstep <st> (67)
        on left: 25
        on right: 15
    cases <st> (68)
        on left: 26
        on right: 16
    value_stmt <st> (69)
        on left: 27
        on right: 28 29
    value_list <st> (70)
        on left: 28 29
        on right: 26 28
    default <st> (71)
        on left: 30 31
        on right: 26
    cond <expNode> (72)
        on left: 32
        on right: 20 21 22 23
    asgn <st> (73)
        on left: 33 34 35 36
        on right: 7 34 36
    print <st> (74)
        on left: 37
        on right: 8
    read <st> (75)
        on left: 38 39
        on right: 9
    readstring <st> (76)
        on left: 40 41
        on right: 10
    exp <expNode> (77)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 26 27 32 33 35 37 44 45 46 47 48 49 50 51 52 53 57 58 59 60 61 62 63 64 65 67 69
    listOfExp <parameters> (78)
        on left: 66 67
        on right: 56
    restOfListOfExp <parameters> (79)
        on left: 68 69
        on right: 67 69


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (stmtlist)

    program   go to state 1
    stmtlist  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: stmtlist •
    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    $end  reduce using rule 1 (program)

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 stmtlist: stmtlist error •

    $default  reduce using rule 4 (stmtlist)


State 5

    6 stmt: SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 6

    5 stmt: COMMENT •

    $default  reduce using rule 5 (stmt)


State 7

   37 print: PRINT • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 39


State 8

   38 read: READ • LPAREN VARIABLE RPAREN
   39     | READ • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 40


State 9

   40 readstring: READ_STRING • LPAREN VARIABLE RPAREN
   41           | READ_STRING • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 41


State 10

   20 if: IF • controlSymbol cond THEN stmtlist END_IF
   21   | IF • controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 19 (controlSymbol)

    controlSymbol  go to state 42


State 11

   22 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 19 (controlSymbol)

    controlSymbol  go to state 43


State 12

   23 repeat: REPEAT • stmtlist UNTIL controlSymbol cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 44


State 13

   24 for: FOR • VARIABLE FROM NUMBER UNTIL NUMBER DO stmtlist END_FOR
   25 forstep: FOR • VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR

    VARIABLE  shift, and go to state 45


State 14

   26 cases: CASES • LPAREN exp RPAREN value_list default END_CASES

    LPAREN  shift, and go to state 46


State 15

   18 block: LETFCURLYBRACKET • stmtlist RIGHTCURLYBRACKET

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 47


State 16

   33 asgn: VARIABLE • ASSIGNMENT exp
   34     | VARIABLE • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 48


State 17

   35 asgn: CONSTANT • ASSIGNMENT exp
   36     | CONSTANT • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 49


State 18

    3 stmtlist: stmtlist stmt •

    $default  reduce using rule 3 (stmtlist)


State 19

   17 stmt: block •

    $default  reduce using rule 17 (stmt)


State 20

   11 stmt: if •

    $default  reduce using rule 11 (stmt)


State 21

   12 stmt: while •

    $default  reduce using rule 12 (stmt)


State 22

   13 stmt: repeat •

    $default  reduce using rule 13 (stmt)


State 23

   14 stmt: for •

    $default  reduce using rule 14 (stmt)


State 24

   15 stmt: forstep •

    $default  reduce using rule 15 (stmt)


State 25

   16 stmt: cases •

    $default  reduce using rule 16 (stmt)


State 26

    7 stmt: asgn • SEMICOLON

    SEMICOLON  shift, and go to state 50


State 27

    8 stmt: print • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 28

    9 stmt: read • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 29

   10 stmt: readstring • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 30

   43 exp: STRING •

    $default  reduce using rule 43 (exp)


State 31

   42 exp: NUMBER •

    $default  reduce using rule 42 (exp)


State 32

   54 exp: VARIABLE •

    $default  reduce using rule 54 (exp)


State 33

   55 exp: CONSTANT •

    $default  reduce using rule 55 (exp)


State 34

   56 exp: BUILTIN • LPAREN listOfExp RPAREN

    LPAREN  shift, and go to state 54


State 35

   65 exp: NOT • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 55


State 36

   50 exp: PLUS • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 56


State 37

   51 exp: MINUS • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 57


State 38

   49 exp: LPAREN • exp RPAREN

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 58


State 39

   37 print: PRINT exp •
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 37 (print)


State 40

   38 read: READ LPAREN • VARIABLE RPAREN
   39     | READ LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 74
    CONSTANT  shift, and go to state 75


State 41

   40 readstring: READ_STRING LPAREN • VARIABLE RPAREN
   41           | READ_STRING LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 76
    CONSTANT  shift, and go to state 77


State 42

   20 if: IF controlSymbol • cond THEN stmtlist END_IF
   21   | IF controlSymbol • cond THEN stmtlist ELSE stmtlist END_IF

    LPAREN  shift, and go to state 78

    cond  go to state 79


State 43

   22 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 78

    cond  go to state 80


State 44

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   23 repeat: REPEAT stmtlist • UNTIL controlSymbol cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    UNTIL             shift, and go to state 81
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 45

   24 for: FOR VARIABLE • FROM NUMBER UNTIL NUMBER DO stmtlist END_FOR
   25 forstep: FOR VARIABLE • FROM NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR

    FROM  shift, and go to state 82


State 46

   26 cases: CASES LPAREN • exp RPAREN value_list default END_CASES

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 83


State 47

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   18 block: LETFCURLYBRACKET stmtlist • RIGHTCURLYBRACKET

    error              shift, and go to state 4
    SEMICOLON          shift, and go to state 5
    COMMENT            shift, and go to state 6
    PRINT              shift, and go to state 7
    READ               shift, and go to state 8
    READ_STRING        shift, and go to state 9
    IF                 shift, and go to state 10
    WHILE              shift, and go to state 11
    REPEAT             shift, and go to state 12
    FOR                shift, and go to state 13
    CASES              shift, and go to state 14
    LETFCURLYBRACKET   shift, and go to state 15
    RIGHTCURLYBRACKET  shift, and go to state 84
    VARIABLE           shift, and go to state 16
    CONSTANT           shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 48

   33 asgn: VARIABLE ASSIGNMENT • exp
   34     | VARIABLE ASSIGNMENT • asgn

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 85
    CONSTANT  shift, and go to state 86
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    asgn  go to state 87
    exp   go to state 88


State 49

   35 asgn: CONSTANT ASSIGNMENT • exp
   36     | CONSTANT ASSIGNMENT • asgn

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 85
    CONSTANT  shift, and go to state 86
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    asgn  go to state 89
    exp   go to state 90


State 50

    7 stmt: asgn SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 51

    8 stmt: print SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 52

    9 stmt: read SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 53

   10 stmt: readstring SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 54

   56 exp: BUILTIN LPAREN • listOfExp RPAREN

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    $default  reduce using rule 66 (listOfExp)

    exp        go to state 91
    listOfExp  go to state 92


State 55

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp
   65    | NOT exp •

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    $default  reduce using rule 65 (exp)


State 56

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   50    | PLUS exp •
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 50 (exp)


State 57

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   51    | MINUS exp •
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 51 (exp)


State 58

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   49    | LPAREN exp • RPAREN
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    RPAREN            shift, and go to state 93
    POWER             shift, and go to state 73


State 59

   64 exp: exp OR • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 94


State 60

   63 exp: exp AND • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 95


State 61

   58 exp: exp GREATER_OR_EQUAL • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 96


State 62

   60 exp: exp LESS_OR_EQUAL • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 97


State 63

   57 exp: exp GREATER_THAN • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 98


State 64

   59 exp: exp LESS_THAN • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 99


State 65

   61 exp: exp EQUAL • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 100


State 66

   62 exp: exp NOT_EQUAL • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 101


State 67

   44 exp: exp CONCAT • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 102


State 68

   45 exp: exp PLUS • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 103


State 69

   46 exp: exp MINUS • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 104


State 70

   47 exp: exp MULTIPLICATION • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 105


State 71

   48 exp: exp DIVISION • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 106


State 72

   52 exp: exp MODULO • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 107


State 73

   53 exp: exp POWER • exp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 108


State 74

   38 read: READ LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 109


State 75

   39 read: READ LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 110


State 76

   40 readstring: READ_STRING LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 111


State 77

   41 readstring: READ_STRING LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 112


State 78

   32 cond: LPAREN • exp RPAREN

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 113


State 79

   20 if: IF controlSymbol cond • THEN stmtlist END_IF
   21   | IF controlSymbol cond • THEN stmtlist ELSE stmtlist END_IF

    THEN  shift, and go to state 114


State 80

   22 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 115


State 81

   23 repeat: REPEAT stmtlist UNTIL • controlSymbol cond

    $default  reduce using rule 19 (controlSymbol)

    controlSymbol  go to state 116


State 82

   24 for: FOR VARIABLE FROM • NUMBER UNTIL NUMBER DO stmtlist END_FOR
   25 forstep: FOR VARIABLE FROM • NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR

    NUMBER  shift, and go to state 117


State 83

   26 cases: CASES LPAREN exp • RPAREN value_list default END_CASES
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    RPAREN            shift, and go to state 118
    POWER             shift, and go to state 73


State 84

   18 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET •

    $default  reduce using rule 18 (block)


State 85

   33 asgn: VARIABLE • ASSIGNMENT exp
   34     | VARIABLE • ASSIGNMENT asgn
   54 exp: VARIABLE •

    ASSIGNMENT  shift, and go to state 48

    $default  reduce using rule 54 (exp)


State 86

   35 asgn: CONSTANT • ASSIGNMENT exp
   36     | CONSTANT • ASSIGNMENT asgn
   55 exp: CONSTANT •

    ASSIGNMENT  shift, and go to state 49

    $default  reduce using rule 55 (exp)


State 87

   34 asgn: VARIABLE ASSIGNMENT asgn •

    $default  reduce using rule 34 (asgn)


State 88

   33 asgn: VARIABLE ASSIGNMENT exp •
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 33 (asgn)


State 89

   36 asgn: CONSTANT ASSIGNMENT asgn •

    $default  reduce using rule 36 (asgn)


State 90

   35 asgn: CONSTANT ASSIGNMENT exp •
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 35 (asgn)


State 91

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp
   67 listOfExp: exp • restOfListOfExp

    COMMA             shift, and go to state 119
    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 68 (restOfListOfExp)

    restOfListOfExp  go to state 120


State 92

   56 exp: BUILTIN LPAREN listOfExp • RPAREN

    RPAREN  shift, and go to state 121


State 93

   49 exp: LPAREN exp RPAREN •

    $default  reduce using rule 49 (exp)


State 94

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp
   64    | exp OR exp •

    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 64 (exp)


State 95

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   63    | exp AND exp •
   64    | exp • OR exp

    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 63 (exp)


State 96

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   58    | exp GREATER_OR_EQUAL exp •
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 58 (exp)


State 97

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   60    | exp LESS_OR_EQUAL exp •
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 60 (exp)


State 98

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   57    | exp GREATER_THAN exp •
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 57 (exp)


State 99

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   59    | exp LESS_THAN exp •
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 59 (exp)


State 100

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   61    | exp EQUAL exp •
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 61 (exp)


State 101

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   62    | exp NOT_EQUAL exp •
   63    | exp • AND exp
   64    | exp • OR exp

    CONCAT          shift, and go to state 67
    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 62 (exp)


State 102

   44 exp: exp • CONCAT exp
   44    | exp CONCAT exp •
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    PLUS            shift, and go to state 68
    MINUS           shift, and go to state 69
    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    $default  reduce using rule 44 (exp)


State 103

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   45    | exp PLUS exp •
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    $default  reduce using rule 45 (exp)


State 104

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   46    | exp MINUS exp •
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    MULTIPLICATION  shift, and go to state 70
    DIVISION        shift, and go to state 71
    MODULO          shift, and go to state 72
    POWER           shift, and go to state 73

    $default  reduce using rule 46 (exp)


State 105

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   47    | exp MULTIPLICATION exp •
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 47 (exp)


State 106

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   48    | exp DIVISION exp •
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 48 (exp)


State 107

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   52    | exp MODULO exp •
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 52 (exp)


State 108

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   53    | exp POWER exp •
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    POWER  shift, and go to state 73

    $default  reduce using rule 53 (exp)


State 109

   38 read: READ LPAREN VARIABLE RPAREN •

    $default  reduce using rule 38 (read)


State 110

   39 read: READ LPAREN CONSTANT RPAREN •

    $default  reduce using rule 39 (read)


State 111

   40 readstring: READ_STRING LPAREN VARIABLE RPAREN •

    $default  reduce using rule 40 (readstring)


State 112

   41 readstring: READ_STRING LPAREN CONSTANT RPAREN •

    $default  reduce using rule 41 (readstring)


State 113

   32 cond: LPAREN exp • RPAREN
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    RPAREN            shift, and go to state 122
    POWER             shift, and go to state 73


State 114

   20 if: IF controlSymbol cond THEN • stmtlist END_IF
   21   | IF controlSymbol cond THEN • stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 123


State 115

   22 while: WHILE controlSymbol cond DO • stmtlist END_WHILE

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 124


State 116

   23 repeat: REPEAT stmtlist UNTIL controlSymbol • cond

    LPAREN  shift, and go to state 78

    cond  go to state 125


State 117

   24 for: FOR VARIABLE FROM NUMBER • UNTIL NUMBER DO stmtlist END_FOR
   25 forstep: FOR VARIABLE FROM NUMBER • UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR

    UNTIL  shift, and go to state 126


State 118

   26 cases: CASES LPAREN exp RPAREN • value_list default END_CASES

    VALUE  shift, and go to state 127

    value_stmt  go to state 128
    value_list  go to state 129


State 119

   69 restOfListOfExp: COMMA • exp restOfListOfExp

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 130


State 120

   67 listOfExp: exp restOfListOfExp •

    $default  reduce using rule 67 (listOfExp)


State 121

   56 exp: BUILTIN LPAREN listOfExp RPAREN •

    $default  reduce using rule 56 (exp)


State 122

   32 cond: LPAREN exp RPAREN •

    $default  reduce using rule 32 (cond)


State 123

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   20 if: IF controlSymbol cond THEN stmtlist • END_IF
   21   | IF controlSymbol cond THEN stmtlist • ELSE stmtlist END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    ELSE              shift, and go to state 131
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 132
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 124

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   22 while: WHILE controlSymbol cond DO stmtlist • END_WHILE

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_WHILE         shift, and go to state 133
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 125

   23 repeat: REPEAT stmtlist UNTIL controlSymbol cond •

    $default  reduce using rule 23 (repeat)


State 126

   24 for: FOR VARIABLE FROM NUMBER UNTIL • NUMBER DO stmtlist END_FOR
   25 forstep: FOR VARIABLE FROM NUMBER UNTIL • NUMBER STEP NUMBER DO stmtlist END_FOR

    NUMBER  shift, and go to state 134


State 127

   27 value_stmt: VALUE • exp COLON stmtlist

    STRING    shift, and go to state 30
    NUMBER    shift, and go to state 31
    VARIABLE  shift, and go to state 32
    CONSTANT  shift, and go to state 33
    BUILTIN   shift, and go to state 34
    NOT       shift, and go to state 35
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    LPAREN    shift, and go to state 38

    exp  go to state 135


State 128

   28 value_list: value_stmt • value_list
   29           | value_stmt •

    VALUE  shift, and go to state 127

    $default  reduce using rule 29 (value_list)

    value_stmt  go to state 128
    value_list  go to state 136


State 129

   26 cases: CASES LPAREN exp RPAREN value_list • default END_CASES

    DEFAULT  shift, and go to state 137

    $default  reduce using rule 31 (default)

    default  go to state 138


State 130

   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp
   69 restOfListOfExp: COMMA exp • restOfListOfExp

    COMMA             shift, and go to state 119
    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73

    $default  reduce using rule 68 (restOfListOfExp)

    restOfListOfExp  go to state 139


State 131

   21 if: IF controlSymbol cond THEN stmtlist ELSE • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 140


State 132

   20 if: IF controlSymbol cond THEN stmtlist END_IF •

    $default  reduce using rule 20 (if)


State 133

   22 while: WHILE controlSymbol cond DO stmtlist END_WHILE •

    $default  reduce using rule 22 (while)


State 134

   24 for: FOR VARIABLE FROM NUMBER UNTIL NUMBER • DO stmtlist END_FOR
   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER • STEP NUMBER DO stmtlist END_FOR

    STEP  shift, and go to state 141
    DO    shift, and go to state 142


State 135

   27 value_stmt: VALUE exp • COLON stmtlist
   44 exp: exp • CONCAT exp
   45    | exp • PLUS exp
   46    | exp • MINUS exp
   47    | exp • MULTIPLICATION exp
   48    | exp • DIVISION exp
   52    | exp • MODULO exp
   53    | exp • POWER exp
   57    | exp • GREATER_THAN exp
   58    | exp • GREATER_OR_EQUAL exp
   59    | exp • LESS_THAN exp
   60    | exp • LESS_OR_EQUAL exp
   61    | exp • EQUAL exp
   62    | exp • NOT_EQUAL exp
   63    | exp • AND exp
   64    | exp • OR exp

    COLON             shift, and go to state 143
    OR                shift, and go to state 59
    AND               shift, and go to state 60
    GREATER_OR_EQUAL  shift, and go to state 61
    LESS_OR_EQUAL     shift, and go to state 62
    GREATER_THAN      shift, and go to state 63
    LESS_THAN         shift, and go to state 64
    EQUAL             shift, and go to state 65
    NOT_EQUAL         shift, and go to state 66
    CONCAT            shift, and go to state 67
    PLUS              shift, and go to state 68
    MINUS             shift, and go to state 69
    MULTIPLICATION    shift, and go to state 70
    DIVISION          shift, and go to state 71
    MODULO            shift, and go to state 72
    POWER             shift, and go to state 73


State 136

   28 value_list: value_stmt value_list •

    $default  reduce using rule 28 (value_list)


State 137

   30 default: DEFAULT • COLON stmtlist

    COLON  shift, and go to state 144


State 138

   26 cases: CASES LPAREN exp RPAREN value_list default • END_CASES

    END_CASES  shift, and go to state 145


State 139

   69 restOfListOfExp: COMMA exp restOfListOfExp •

    $default  reduce using rule 69 (restOfListOfExp)


State 140

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   21 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    END_IF            shift, and go to state 146
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 141

   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP • NUMBER DO stmtlist END_FOR

    NUMBER  shift, and go to state 147


State 142

   24 for: FOR VARIABLE FROM NUMBER UNTIL NUMBER DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 148


State 143

   27 value_stmt: VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 149


State 144

   30 default: DEFAULT COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 150


State 145

   26 cases: CASES LPAREN exp RPAREN value_list default END_CASES •

    $default  reduce using rule 26 (cases)


State 146

   21 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF •

    $default  reduce using rule 21 (if)


State 147

   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER • DO stmtlist END_FOR

    DO  shift, and go to state 151


State 148

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   24 for: FOR VARIABLE FROM NUMBER UNTIL NUMBER DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 152
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 149

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   27 value_stmt: VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    VALUE      reduce using rule 27 (value_stmt)
    DEFAULT    reduce using rule 27 (value_stmt)
    END_CASES  reduce using rule 27 (value_stmt)

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 150

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   30 default: DEFAULT COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    END_CASES  reduce using rule 30 (default)

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 151

   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 153


State 152

   24 for: FOR VARIABLE FROM NUMBER UNTIL NUMBER DO stmtlist END_FOR •

    $default  reduce using rule 24 (for)


State 153

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    REPEAT            shift, and go to state 12
    FOR               shift, and go to state 13
    END_FOR           shift, and go to state 154
    CASES             shift, and go to state 14
    LETFCURLYBRACKET  shift, and go to state 15
    VARIABLE          shift, and go to state 16
    CONSTANT          shift, and go to state 17

    stmt        go to state 18
    block       go to state 19
    if          go to state 20
    while       go to state 21
    repeat      go to state 22
    for         go to state 23
    forstep     go to state 24
    cases       go to state 25
    asgn        go to state 26
    print       go to state 27
    read        go to state 28
    readstring  go to state 29


State 154

   25 forstep: FOR VARIABLE FROM NUMBER UNTIL NUMBER STEP NUMBER DO stmtlist END_FOR •

    $default  reduce using rule 25 (forstep)
