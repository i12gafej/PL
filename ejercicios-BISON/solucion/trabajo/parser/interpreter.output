Terminals unused in grammar

    BOOL
    UNDEFINED


Grammar

    0 $accept: program $end

    1 program: stmtlist

    2 stmtlist: ε
    3         | stmtlist stmt
    4         | stmtlist error

    5 stmt: COMMENT
    6     | SEMICOLON
    7     | asgn SEMICOLON
    8     | preincstmt SEMICOLON
    9     | postincstmt SEMICOLON
   10     | predecstmt SEMICOLON
   11     | postdecstmt SEMICOLON
   12     | print SEMICOLON
   13     | read SEMICOLON
   14     | readstring SEMICOLON
   15     | if
   16     | dowhile SEMICOLON
   17     | while
   18     | repeat
   19     | for
   20     | cases
   21     | block
   22     | clear
   23     | place
   24     | errorstmt

   25 preincstmt: INCREMENT VARIABLE

   26 postincstmt: VARIABLE INCREMENT

   27 predecstmt: DECREMENT VARIABLE

   28 postdecstmt: VARIABLE DECREMENT

   29 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET

   30 controlSymbol: ε

   31 errorstmt: errorif
   32          | errorifelse

   33 errorif: IF THEN stmtlist END_IF
   34        | THEN stmtlist END_IF

   35 errorifelse: IF THEN stmtlist ELSE stmtlist END_IF

   36 if: IF controlSymbol cond THEN stmtlist END_IF
   37   | IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

   38 dowhile: DO controlSymbol stmtlist WHILE controlSymbol cond

   39 while: WHILE controlSymbol cond DO stmtlist END_WHILE

   40 repeat: REPEAT controlSymbol stmtlist UNTIL cond

   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

   43 cases: CASES LPAREN exp RPAREN value_list default END_CASES

   44 value_list: VALUE exp COLON stmtlist
   45           | value_list VALUE exp COLON stmtlist

   46 default: DEFAULT COLON stmtlist
   47        | ε

   48 clear: CLEAR SEMICOLON

   49 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON

   50 cond: LPAREN exp RPAREN

   51 asgn: VARIABLE ASSIGNMENT exp
   52     | VARIABLE PLUS_ASSIGNMENT exp
   53     | VARIABLE PLUS_ASSIGNMENT asgn
   54     | VARIABLE MINUS_ASSIGNMENT exp
   55     | VARIABLE MINUS_ASSIGNMENT asgn
   56     | VARIABLE MULTIPLICATION_ASSIGNMENT exp
   57     | VARIABLE MULTIPLICATION_ASSIGNMENT asgn
   58     | VARIABLE DIVISION_ASSIGNMENT exp
   59     | VARIABLE DIVISION_ASSIGNMENT asgn
   60     | VARIABLE INT_DIVISION_ASSIGNMENT exp
   61     | VARIABLE INT_DIVISION_ASSIGNMENT asgn
   62     | VARIABLE MODULO_ASSIGNMENT exp
   63     | VARIABLE MODULO_ASSIGNMENT asgn
   64     | VARIABLE POWER_ASSIGNMENT exp
   65     | VARIABLE POWER_ASSIGNMENT asgn
   66     | VARIABLE ASSIGNMENT asgn
   67     | CONSTANT ASSIGNMENT exp
   68     | CONSTANT ASSIGNMENT asgn
   69     | VARIABLE ASSIGNMENT alternative

   70 print: PRINT exp

   71 read: READ LPAREN VARIABLE RPAREN
   72     | READ LPAREN CONSTANT RPAREN

   73 readstring: READ_STRING LPAREN VARIABLE RPAREN
   74           | READ_STRING LPAREN CONSTANT RPAREN

   75 alternative: cond ALT exp COLON exp

   76 exp: NUMBER
   77    | STRING
   78    | exp CONCAT exp
   79    | exp PLUS exp
   80    | exp MINUS exp
   81    | exp MULTIPLICATION exp
   82    | exp DIVISION exp
   83    | exp INT_DIVISION exp
   84    | LPAREN exp RPAREN
   85    | PLUS exp
   86    | MINUS exp
   87    | preinc
   88    | postinc
   89    | predec
   90    | postdec
   91    | exp MODULO exp
   92    | exp POWER exp
   93    | VARIABLE
   94    | CONSTANT
   95    | BUILTIN LPAREN listOfExp RPAREN
   96    | exp GREATER_THAN exp
   97    | exp GREATER_OR_EQUAL exp
   98    | exp LESS_THAN exp
   99    | exp LESS_OR_EQUAL exp
  100    | exp EQUAL exp
  101    | exp NOT_EQUAL exp
  102    | exp AND exp
  103    | exp OR exp
  104    | NOT exp

  105 preinc: INCREMENT VARIABLE

  106 postinc: VARIABLE INCREMENT

  107 predec: DECREMENT VARIABLE

  108 postdec: VARIABLE DECREMENT

  109 listOfExp: ε
  110          | exp restOfListOfExp

  111 restOfListOfExp: ε
  112                | COMMA exp restOfListOfExp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    SEMICOLON (258) 6 7 8 9 10 11 12 13 14 16 48 49
    COLON (259) 44 45 46 75
    ALT (260) 75
    COMMENT <comentario> (261) 5
    PRINT (262) 70
    READ (263) 71 72
    READ_STRING (264) 73 74
    IF (265) 33 35 36 37
    ELSE (266) 35 37
    WHILE (267) 38 39
    THEN (268) 33 34 35 36 37
    END_IF (269) 33 34 35 36 37
    END_WHILE (270) 39
    REPEAT (271) 40
    FOR (272) 41 42
    FROM (273) 41 42
    UNTIL (274) 40 41 42
    END_FOR (275) 41 42
    STEP (276) 42
    CASES (277) 43
    VALUE (278) 44 45
    DEFAULT (279) 46
    END_CASES (280) 43
    DO (281) 38 39 41 42
    CLEAR (282) 48
    PLACE (283) 49
    LETFCURLYBRACKET (284) 29
    RIGHTCURLYBRACKET (285) 29
    ASSIGNMENT (286) 51 66 67 68 69
    PLUS_ASSIGNMENT (287) 52 53
    MINUS_ASSIGNMENT (288) 54 55
    MULTIPLICATION_ASSIGNMENT (289) 56 57
    DIVISION_ASSIGNMENT (290) 58 59
    INT_DIVISION_ASSIGNMENT (291) 60 61
    MODULO_ASSIGNMENT (292) 62 63
    POWER_ASSIGNMENT (293) 64 65
    COMMA (294) 49 112
    STRING <cadena> (295) 77
    NUMBER <number> (296) 76
    BOOL <logic> (297)
    VARIABLE <string> (298) 25 26 27 28 41 42 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 71 73 93 105 106 107 108
    UNDEFINED <string> (299)
    CONSTANT <string> (300) 67 68 72 74 94
    BUILTIN <string> (301) 95
    OR (302) 103
    AND (303) 102
    GREATER_OR_EQUAL (304) 97
    LESS_OR_EQUAL (305) 99
    GREATER_THAN (306) 96
    LESS_THAN (307) 98
    EQUAL (308) 100
    NOT_EQUAL (309) 101
    NOT (310) 104
    CONCAT (311) 78
    PLUS (312) 79 85
    MINUS (313) 80 86
    MULTIPLICATION (314) 81
    DIVISION (315) 82
    MODULO (316) 91
    INT_DIVISION (317) 83
    LPAREN (318) 43 49 50 71 72 73 74 84 95
    RPAREN (319) 43 49 50 71 72 73 74 84 95
    UNARY (320)
    INCREMENT (321) 25 26 105 106
    DECREMENT (322) 27 28 107 108
    POWER (323) 92


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    program <prog> (70)
        on left: 1
        on right: 0
    stmtlist <stmts> (71)
        on left: 2 3 4
        on right: 1 3 4 29 33 34 35 36 37 38 39 40 41 42 44 45 46
    stmt <st> (72)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 3
    preincstmt <st> (73)
        on left: 25
        on right: 8
    postincstmt <st> (74)
        on left: 26
        on right: 9
    predecstmt <st> (75)
        on left: 27
        on right: 10
    postdecstmt <st> (76)
        on left: 28
        on right: 11
    block <st> (77)
        on left: 29
        on right: 21
    controlSymbol (78)
        on left: 30
        on right: 36 37 38 39 40 41 42
    errorstmt <st> (79)
        on left: 31 32
        on right: 24
    errorif <st> (80)
        on left: 33 34
        on right: 31
    errorifelse <st> (81)
        on left: 35
        on right: 32
    if <st> (82)
        on left: 36 37
        on right: 15
    dowhile <st> (83)
        on left: 38
        on right: 16
    while <st> (84)
        on left: 39
        on right: 17
    repeat <st> (85)
        on left: 40
        on right: 18
    for <st> (86)
        on left: 41 42
        on right: 19
    cases <st> (87)
        on left: 43
        on right: 20
    value_list <valuestmts> (88)
        on left: 44 45
        on right: 43 45
    default <st> (89)
        on left: 46 47
        on right: 43
    clear <st> (90)
        on left: 48
        on right: 22
    place <st> (91)
        on left: 49
        on right: 23
    cond <expNode> (92)
        on left: 50
        on right: 36 37 38 39 40 75
    asgn <st> (93)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 7 53 55 57 59 61 63 65 66 68
    print <st> (94)
        on left: 70
        on right: 12
    read <st> (95)
        on left: 71 72
        on right: 13
    readstring <st> (96)
        on left: 73 74
        on right: 14
    alternative <expNode> (97)
        on left: 75
        on right: 69
    exp <expNode> (98)
        on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
        on right: 41 42 43 44 45 49 50 51 52 54 56 58 60 62 64 67 70 75 78 79 80 81 82 83 84 85 86 91 92 96 97 98 99 100 101 102 103 104 110 112
    preinc <expNode> (99)
        on left: 105
        on right: 87
    postinc <expNode> (100)
        on left: 106
        on right: 88
    predec <expNode> (101)
        on left: 107
        on right: 89
    postdec <expNode> (102)
        on left: 108
        on right: 90
    listOfExp <parameters> (103)
        on left: 109 110
        on right: 95
    restOfListOfExp <parameters> (104)
        on left: 111 112
        on right: 110 112


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (stmtlist)

    program   go to state 1
    stmtlist  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: stmtlist •
    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    $end  reduce using rule 1 (program)

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 stmtlist: stmtlist error •

    $default  reduce using rule 4 (stmtlist)


State 5

    6 stmt: SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 6

    5 stmt: COMMENT •

    $default  reduce using rule 5 (stmt)


State 7

   70 print: PRINT • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 56
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 8

   71 read: READ • LPAREN VARIABLE RPAREN
   72     | READ • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 61


State 9

   73 readstring: READ_STRING • LPAREN VARIABLE RPAREN
   74           | READ_STRING • LPAREN CONSTANT RPAREN

    LPAREN  shift, and go to state 62


State 10

   33 errorif: IF • THEN stmtlist END_IF
   35 errorifelse: IF • THEN stmtlist ELSE stmtlist END_IF
   36 if: IF • controlSymbol cond THEN stmtlist END_IF
   37   | IF • controlSymbol cond THEN stmtlist ELSE stmtlist END_IF

    THEN  shift, and go to state 63

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 64


State 11

   39 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 65


State 12

   34 errorif: THEN • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 66


State 13

   40 repeat: REPEAT • controlSymbol stmtlist UNTIL cond

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 67


State 14

   41 for: FOR • controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   42    | FOR • controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 68


State 15

   43 cases: CASES • LPAREN exp RPAREN value_list default END_CASES

    LPAREN  shift, and go to state 69


State 16

   38 dowhile: DO • controlSymbol stmtlist WHILE controlSymbol cond

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 70


State 17

   48 clear: CLEAR • SEMICOLON

    SEMICOLON  shift, and go to state 71


State 18

   49 place: PLACE • LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 19

   29 block: LETFCURLYBRACKET • stmtlist RIGHTCURLYBRACKET

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 73


State 20

   26 postincstmt: VARIABLE • INCREMENT
   28 postdecstmt: VARIABLE • DECREMENT
   51 asgn: VARIABLE • ASSIGNMENT exp
   52     | VARIABLE • PLUS_ASSIGNMENT exp
   53     | VARIABLE • PLUS_ASSIGNMENT asgn
   54     | VARIABLE • MINUS_ASSIGNMENT exp
   55     | VARIABLE • MINUS_ASSIGNMENT asgn
   56     | VARIABLE • MULTIPLICATION_ASSIGNMENT exp
   57     | VARIABLE • MULTIPLICATION_ASSIGNMENT asgn
   58     | VARIABLE • DIVISION_ASSIGNMENT exp
   59     | VARIABLE • DIVISION_ASSIGNMENT asgn
   60     | VARIABLE • INT_DIVISION_ASSIGNMENT exp
   61     | VARIABLE • INT_DIVISION_ASSIGNMENT asgn
   62     | VARIABLE • MODULO_ASSIGNMENT exp
   63     | VARIABLE • MODULO_ASSIGNMENT asgn
   64     | VARIABLE • POWER_ASSIGNMENT exp
   65     | VARIABLE • POWER_ASSIGNMENT asgn
   66     | VARIABLE • ASSIGNMENT asgn
   69     | VARIABLE • ASSIGNMENT alternative

    ASSIGNMENT                 shift, and go to state 74
    PLUS_ASSIGNMENT            shift, and go to state 75
    MINUS_ASSIGNMENT           shift, and go to state 76
    MULTIPLICATION_ASSIGNMENT  shift, and go to state 77
    DIVISION_ASSIGNMENT        shift, and go to state 78
    INT_DIVISION_ASSIGNMENT    shift, and go to state 79
    MODULO_ASSIGNMENT          shift, and go to state 80
    POWER_ASSIGNMENT           shift, and go to state 81
    INCREMENT                  shift, and go to state 82
    DECREMENT                  shift, and go to state 83


State 21

   67 asgn: CONSTANT • ASSIGNMENT exp
   68     | CONSTANT • ASSIGNMENT asgn

    ASSIGNMENT  shift, and go to state 84


State 22

   25 preincstmt: INCREMENT • VARIABLE

    VARIABLE  shift, and go to state 85


State 23

   27 predecstmt: DECREMENT • VARIABLE

    VARIABLE  shift, and go to state 86


State 24

    3 stmtlist: stmtlist stmt •

    $default  reduce using rule 3 (stmtlist)


State 25

    8 stmt: preincstmt • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 26

    9 stmt: postincstmt • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 27

   10 stmt: predecstmt • SEMICOLON

    SEMICOLON  shift, and go to state 89


State 28

   11 stmt: postdecstmt • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 29

   21 stmt: block •

    $default  reduce using rule 21 (stmt)


State 30

   24 stmt: errorstmt •

    $default  reduce using rule 24 (stmt)


State 31

   31 errorstmt: errorif •

    $default  reduce using rule 31 (errorstmt)


State 32

   32 errorstmt: errorifelse •

    $default  reduce using rule 32 (errorstmt)


State 33

   15 stmt: if •

    $default  reduce using rule 15 (stmt)


State 34

   16 stmt: dowhile • SEMICOLON

    SEMICOLON  shift, and go to state 91


State 35

   17 stmt: while •

    $default  reduce using rule 17 (stmt)


State 36

   18 stmt: repeat •

    $default  reduce using rule 18 (stmt)


State 37

   19 stmt: for •

    $default  reduce using rule 19 (stmt)


State 38

   20 stmt: cases •

    $default  reduce using rule 20 (stmt)


State 39

   22 stmt: clear •

    $default  reduce using rule 22 (stmt)


State 40

   23 stmt: place •

    $default  reduce using rule 23 (stmt)


State 41

    7 stmt: asgn • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 42

   12 stmt: print • SEMICOLON

    SEMICOLON  shift, and go to state 93


State 43

   13 stmt: read • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 44

   14 stmt: readstring • SEMICOLON

    SEMICOLON  shift, and go to state 95


State 45

   77 exp: STRING •

    $default  reduce using rule 77 (exp)


State 46

   76 exp: NUMBER •

    $default  reduce using rule 76 (exp)


State 47

   93 exp: VARIABLE •
  106 postinc: VARIABLE • INCREMENT
  108 postdec: VARIABLE • DECREMENT

    INCREMENT  shift, and go to state 96
    DECREMENT  shift, and go to state 97

    $default  reduce using rule 93 (exp)


State 48

   94 exp: CONSTANT •

    $default  reduce using rule 94 (exp)


State 49

   95 exp: BUILTIN • LPAREN listOfExp RPAREN

    LPAREN  shift, and go to state 98


State 50

  104 exp: NOT • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 99
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 51

   85 exp: PLUS • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 100
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 52

   86 exp: MINUS • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 101
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 53

   84 exp: LPAREN • exp RPAREN

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 102
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 54

  105 preinc: INCREMENT • VARIABLE

    VARIABLE  shift, and go to state 103


State 55

  107 predec: DECREMENT • VARIABLE

    VARIABLE  shift, and go to state 104


State 56

   70 print: PRINT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 70 (print)


State 57

   87 exp: preinc •

    $default  reduce using rule 87 (exp)


State 58

   88 exp: postinc •

    $default  reduce using rule 88 (exp)


State 59

   89 exp: predec •

    $default  reduce using rule 89 (exp)


State 60

   90 exp: postdec •

    $default  reduce using rule 90 (exp)


State 61

   71 read: READ LPAREN • VARIABLE RPAREN
   72     | READ LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 121
    CONSTANT  shift, and go to state 122


State 62

   73 readstring: READ_STRING LPAREN • VARIABLE RPAREN
   74           | READ_STRING LPAREN • CONSTANT RPAREN

    VARIABLE  shift, and go to state 123
    CONSTANT  shift, and go to state 124


State 63

   33 errorif: IF THEN • stmtlist END_IF
   35 errorifelse: IF THEN • stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 125


State 64

   36 if: IF controlSymbol • cond THEN stmtlist END_IF
   37   | IF controlSymbol • cond THEN stmtlist ELSE stmtlist END_IF

    LPAREN  shift, and go to state 126

    cond  go to state 127


State 65

   39 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 126

    cond  go to state 128


State 66

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   34 errorif: THEN stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_IF            shift, and go to state 129
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 67

   40 repeat: REPEAT controlSymbol • stmtlist UNTIL cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 130


State 68

   41 for: FOR controlSymbol • VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR
   42    | FOR controlSymbol • VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    VARIABLE  shift, and go to state 131


State 69

   43 cases: CASES LPAREN • exp RPAREN value_list default END_CASES

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 132
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 70

   38 dowhile: DO controlSymbol • stmtlist WHILE controlSymbol cond

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 133


State 71

   48 clear: CLEAR SEMICOLON •

    $default  reduce using rule 48 (clear)


State 72

   49 place: PLACE LPAREN • exp COMMA exp RPAREN SEMICOLON

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 134
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 73

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   29 block: LETFCURLYBRACKET stmtlist • RIGHTCURLYBRACKET

    error              shift, and go to state 4
    SEMICOLON          shift, and go to state 5
    COMMENT            shift, and go to state 6
    PRINT              shift, and go to state 7
    READ               shift, and go to state 8
    READ_STRING        shift, and go to state 9
    IF                 shift, and go to state 10
    WHILE              shift, and go to state 11
    THEN               shift, and go to state 12
    REPEAT             shift, and go to state 13
    FOR                shift, and go to state 14
    CASES              shift, and go to state 15
    DO                 shift, and go to state 16
    CLEAR              shift, and go to state 17
    PLACE              shift, and go to state 18
    LETFCURLYBRACKET   shift, and go to state 19
    RIGHTCURLYBRACKET  shift, and go to state 135
    VARIABLE           shift, and go to state 20
    CONSTANT           shift, and go to state 21
    INCREMENT          shift, and go to state 22
    DECREMENT          shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 74

   51 asgn: VARIABLE ASSIGNMENT • exp
   66     | VARIABLE ASSIGNMENT • asgn
   69     | VARIABLE ASSIGNMENT • alternative

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 138
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    cond         go to state 139
    asgn         go to state 140
    alternative  go to state 141
    exp          go to state 142
    preinc       go to state 57
    postinc      go to state 58
    predec       go to state 59
    postdec      go to state 60


State 75

   52 asgn: VARIABLE PLUS_ASSIGNMENT • exp
   53     | VARIABLE PLUS_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 143
    exp      go to state 144
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 76

   54 asgn: VARIABLE MINUS_ASSIGNMENT • exp
   55     | VARIABLE MINUS_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 145
    exp      go to state 146
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 77

   56 asgn: VARIABLE MULTIPLICATION_ASSIGNMENT • exp
   57     | VARIABLE MULTIPLICATION_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 147
    exp      go to state 148
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 78

   58 asgn: VARIABLE DIVISION_ASSIGNMENT • exp
   59     | VARIABLE DIVISION_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 149
    exp      go to state 150
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 79

   60 asgn: VARIABLE INT_DIVISION_ASSIGNMENT • exp
   61     | VARIABLE INT_DIVISION_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 151
    exp      go to state 152
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 80

   62 asgn: VARIABLE MODULO_ASSIGNMENT • exp
   63     | VARIABLE MODULO_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 153
    exp      go to state 154
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 81

   64 asgn: VARIABLE POWER_ASSIGNMENT • exp
   65     | VARIABLE POWER_ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 155
    exp      go to state 156
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 82

   26 postincstmt: VARIABLE INCREMENT •

    $default  reduce using rule 26 (postincstmt)


State 83

   28 postdecstmt: VARIABLE DECREMENT •

    $default  reduce using rule 28 (postdecstmt)


State 84

   67 asgn: CONSTANT ASSIGNMENT • exp
   68     | CONSTANT ASSIGNMENT • asgn

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 136
    CONSTANT   shift, and go to state 137
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    asgn     go to state 157
    exp      go to state 158
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 85

   25 preincstmt: INCREMENT VARIABLE •

    $default  reduce using rule 25 (preincstmt)


State 86

   27 predecstmt: DECREMENT VARIABLE •

    $default  reduce using rule 27 (predecstmt)


State 87

    8 stmt: preincstmt SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 88

    9 stmt: postincstmt SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 89

   10 stmt: predecstmt SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 90

   11 stmt: postdecstmt SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 91

   16 stmt: dowhile SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 92

    7 stmt: asgn SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 93

   12 stmt: print SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 94

   13 stmt: read SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 95

   14 stmt: readstring SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 96

  106 postinc: VARIABLE INCREMENT •

    $default  reduce using rule 106 (postinc)


State 97

  108 postdec: VARIABLE DECREMENT •

    $default  reduce using rule 108 (postdec)


State 98

   95 exp: BUILTIN LPAREN • listOfExp RPAREN

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    $default  reduce using rule 109 (listOfExp)

    exp        go to state 159
    preinc     go to state 57
    postinc    go to state 58
    predec     go to state 59
    postdec    go to state 60
    listOfExp  go to state 160


State 99

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp
  104    | NOT exp •

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    $default  reduce using rule 104 (exp)


State 100

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   85    | PLUS exp •
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 85 (exp)


State 101

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   86    | MINUS exp •
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 86 (exp)


State 102

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   84    | LPAREN exp • RPAREN
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    RPAREN            shift, and go to state 161
    POWER             shift, and go to state 120


State 103

  105 preinc: INCREMENT VARIABLE •

    $default  reduce using rule 105 (preinc)


State 104

  107 predec: DECREMENT VARIABLE •

    $default  reduce using rule 107 (predec)


State 105

  103 exp: exp OR • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 162
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 106

  102 exp: exp AND • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 163
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 107

   97 exp: exp GREATER_OR_EQUAL • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 164
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 108

   99 exp: exp LESS_OR_EQUAL • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 165
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 109

   96 exp: exp GREATER_THAN • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 166
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 110

   98 exp: exp LESS_THAN • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 167
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 111

  100 exp: exp EQUAL • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 168
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 112

  101 exp: exp NOT_EQUAL • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 169
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 113

   78 exp: exp CONCAT • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 170
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 114

   79 exp: exp PLUS • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 171
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 115

   80 exp: exp MINUS • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 172
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 116

   81 exp: exp MULTIPLICATION • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 173
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 117

   82 exp: exp DIVISION • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 174
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 118

   91 exp: exp MODULO • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 175
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 119

   83 exp: exp INT_DIVISION • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 176
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 120

   92 exp: exp POWER • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 177
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 121

   71 read: READ LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 178


State 122

   72 read: READ LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 179


State 123

   73 readstring: READ_STRING LPAREN VARIABLE • RPAREN

    RPAREN  shift, and go to state 180


State 124

   74 readstring: READ_STRING LPAREN CONSTANT • RPAREN

    RPAREN  shift, and go to state 181


State 125

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   33 errorif: IF THEN stmtlist • END_IF
   35 errorifelse: IF THEN stmtlist • ELSE stmtlist END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    ELSE              shift, and go to state 182
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_IF            shift, and go to state 183
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 126

   50 cond: LPAREN • exp RPAREN

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 184
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 127

   36 if: IF controlSymbol cond • THEN stmtlist END_IF
   37   | IF controlSymbol cond • THEN stmtlist ELSE stmtlist END_IF

    THEN  shift, and go to state 185


State 128

   39 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 186


State 129

   34 errorif: THEN stmtlist END_IF •

    $default  reduce using rule 34 (errorif)


State 130

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   40 repeat: REPEAT controlSymbol stmtlist • UNTIL cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    UNTIL             shift, and go to state 187
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 131

   41 for: FOR controlSymbol VARIABLE • FROM exp UNTIL exp DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE • FROM exp UNTIL exp STEP exp DO stmtlist END_FOR

    FROM  shift, and go to state 188


State 132

   43 cases: CASES LPAREN exp • RPAREN value_list default END_CASES
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    RPAREN            shift, and go to state 189
    POWER             shift, and go to state 120


State 133

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   38 dowhile: DO controlSymbol stmtlist • WHILE controlSymbol cond

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 190
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 134

   49 place: PLACE LPAREN exp • COMMA exp RPAREN SEMICOLON
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    COMMA             shift, and go to state 191
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 135

   29 block: LETFCURLYBRACKET stmtlist RIGHTCURLYBRACKET •

    $default  reduce using rule 29 (block)


State 136

   51 asgn: VARIABLE • ASSIGNMENT exp
   52     | VARIABLE • PLUS_ASSIGNMENT exp
   53     | VARIABLE • PLUS_ASSIGNMENT asgn
   54     | VARIABLE • MINUS_ASSIGNMENT exp
   55     | VARIABLE • MINUS_ASSIGNMENT asgn
   56     | VARIABLE • MULTIPLICATION_ASSIGNMENT exp
   57     | VARIABLE • MULTIPLICATION_ASSIGNMENT asgn
   58     | VARIABLE • DIVISION_ASSIGNMENT exp
   59     | VARIABLE • DIVISION_ASSIGNMENT asgn
   60     | VARIABLE • INT_DIVISION_ASSIGNMENT exp
   61     | VARIABLE • INT_DIVISION_ASSIGNMENT asgn
   62     | VARIABLE • MODULO_ASSIGNMENT exp
   63     | VARIABLE • MODULO_ASSIGNMENT asgn
   64     | VARIABLE • POWER_ASSIGNMENT exp
   65     | VARIABLE • POWER_ASSIGNMENT asgn
   66     | VARIABLE • ASSIGNMENT asgn
   69     | VARIABLE • ASSIGNMENT alternative
   93 exp: VARIABLE •
  106 postinc: VARIABLE • INCREMENT
  108 postdec: VARIABLE • DECREMENT

    ASSIGNMENT                 shift, and go to state 74
    PLUS_ASSIGNMENT            shift, and go to state 75
    MINUS_ASSIGNMENT           shift, and go to state 76
    MULTIPLICATION_ASSIGNMENT  shift, and go to state 77
    DIVISION_ASSIGNMENT        shift, and go to state 78
    INT_DIVISION_ASSIGNMENT    shift, and go to state 79
    MODULO_ASSIGNMENT          shift, and go to state 80
    POWER_ASSIGNMENT           shift, and go to state 81
    INCREMENT                  shift, and go to state 96
    DECREMENT                  shift, and go to state 97

    $default  reduce using rule 93 (exp)


State 137

   67 asgn: CONSTANT • ASSIGNMENT exp
   68     | CONSTANT • ASSIGNMENT asgn
   94 exp: CONSTANT •

    ASSIGNMENT  shift, and go to state 84

    $default  reduce using rule 94 (exp)


State 138

   50 cond: LPAREN • exp RPAREN
   84 exp: LPAREN • exp RPAREN

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 192
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 139

   75 alternative: cond • ALT exp COLON exp

    ALT  shift, and go to state 193


State 140

   66 asgn: VARIABLE ASSIGNMENT asgn •

    $default  reduce using rule 66 (asgn)


State 141

   69 asgn: VARIABLE ASSIGNMENT alternative •

    $default  reduce using rule 69 (asgn)


State 142

   51 asgn: VARIABLE ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 51 (asgn)


State 143

   53 asgn: VARIABLE PLUS_ASSIGNMENT asgn •

    $default  reduce using rule 53 (asgn)


State 144

   52 asgn: VARIABLE PLUS_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 52 (asgn)


State 145

   55 asgn: VARIABLE MINUS_ASSIGNMENT asgn •

    $default  reduce using rule 55 (asgn)


State 146

   54 asgn: VARIABLE MINUS_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 54 (asgn)


State 147

   57 asgn: VARIABLE MULTIPLICATION_ASSIGNMENT asgn •

    $default  reduce using rule 57 (asgn)


State 148

   56 asgn: VARIABLE MULTIPLICATION_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 56 (asgn)


State 149

   59 asgn: VARIABLE DIVISION_ASSIGNMENT asgn •

    $default  reduce using rule 59 (asgn)


State 150

   58 asgn: VARIABLE DIVISION_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 58 (asgn)


State 151

   61 asgn: VARIABLE INT_DIVISION_ASSIGNMENT asgn •

    $default  reduce using rule 61 (asgn)


State 152

   60 asgn: VARIABLE INT_DIVISION_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 60 (asgn)


State 153

   63 asgn: VARIABLE MODULO_ASSIGNMENT asgn •

    $default  reduce using rule 63 (asgn)


State 154

   62 asgn: VARIABLE MODULO_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 62 (asgn)


State 155

   65 asgn: VARIABLE POWER_ASSIGNMENT asgn •

    $default  reduce using rule 65 (asgn)


State 156

   64 asgn: VARIABLE POWER_ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 64 (asgn)


State 157

   68 asgn: CONSTANT ASSIGNMENT asgn •

    $default  reduce using rule 68 (asgn)


State 158

   67 asgn: CONSTANT ASSIGNMENT exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 67 (asgn)


State 159

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp
  110 listOfExp: exp • restOfListOfExp

    COMMA             shift, and go to state 194
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 111 (restOfListOfExp)

    restOfListOfExp  go to state 195


State 160

   95 exp: BUILTIN LPAREN listOfExp • RPAREN

    RPAREN  shift, and go to state 196


State 161

   84 exp: LPAREN exp RPAREN •

    $default  reduce using rule 84 (exp)


State 162

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp
  103    | exp OR exp •

    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 103 (exp)


State 163

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  102    | exp AND exp •
  103    | exp • OR exp

    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 102 (exp)


State 164

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   97    | exp GREATER_OR_EQUAL exp •
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 97 (exp)


State 165

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
   99    | exp LESS_OR_EQUAL exp •
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 99 (exp)


State 166

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   96    | exp GREATER_THAN exp •
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 96 (exp)


State 167

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   98    | exp LESS_THAN exp •
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 98 (exp)


State 168

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  100    | exp EQUAL exp •
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 100 (exp)


State 169

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  101    | exp NOT_EQUAL exp •
  102    | exp • AND exp
  103    | exp • OR exp

    CONCAT          shift, and go to state 113
    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    EQUAL             error (nonassociative)
    NOT_EQUAL         error (nonassociative)

    $default  reduce using rule 101 (exp)


State 170

   78 exp: exp • CONCAT exp
   78    | exp CONCAT exp •
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    PLUS            shift, and go to state 114
    MINUS           shift, and go to state 115
    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    $default  reduce using rule 78 (exp)


State 171

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   79    | exp PLUS exp •
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    $default  reduce using rule 79 (exp)


State 172

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   80    | exp MINUS exp •
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    MULTIPLICATION  shift, and go to state 116
    DIVISION        shift, and go to state 117
    MODULO          shift, and go to state 118
    INT_DIVISION    shift, and go to state 119
    POWER           shift, and go to state 120

    $default  reduce using rule 80 (exp)


State 173

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   81    | exp MULTIPLICATION exp •
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 81 (exp)


State 174

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   82    | exp DIVISION exp •
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 82 (exp)


State 175

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   91    | exp MODULO exp •
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 91 (exp)


State 176

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   83    | exp INT_DIVISION exp •
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 83 (exp)


State 177

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   92    | exp POWER exp •
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    POWER  shift, and go to state 120

    $default  reduce using rule 92 (exp)


State 178

   71 read: READ LPAREN VARIABLE RPAREN •

    $default  reduce using rule 71 (read)


State 179

   72 read: READ LPAREN CONSTANT RPAREN •

    $default  reduce using rule 72 (read)


State 180

   73 readstring: READ_STRING LPAREN VARIABLE RPAREN •

    $default  reduce using rule 73 (readstring)


State 181

   74 readstring: READ_STRING LPAREN CONSTANT RPAREN •

    $default  reduce using rule 74 (readstring)


State 182

   35 errorifelse: IF THEN stmtlist ELSE • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 197


State 183

   33 errorif: IF THEN stmtlist END_IF •

    $default  reduce using rule 33 (errorif)


State 184

   50 cond: LPAREN exp • RPAREN
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    RPAREN            shift, and go to state 198
    POWER             shift, and go to state 120


State 185

   36 if: IF controlSymbol cond THEN • stmtlist END_IF
   37   | IF controlSymbol cond THEN • stmtlist ELSE stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 199


State 186

   39 while: WHILE controlSymbol cond DO • stmtlist END_WHILE

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 200


State 187

   40 repeat: REPEAT controlSymbol stmtlist UNTIL • cond

    LPAREN  shift, and go to state 126

    cond  go to state 201


State 188

   41 for: FOR controlSymbol VARIABLE FROM • exp UNTIL exp DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE FROM • exp UNTIL exp STEP exp DO stmtlist END_FOR

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 202
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 189

   43 cases: CASES LPAREN exp RPAREN • value_list default END_CASES

    VALUE  shift, and go to state 203

    value_list  go to state 204


State 190

   38 dowhile: DO controlSymbol stmtlist WHILE • controlSymbol cond
   39 while: WHILE • controlSymbol cond DO stmtlist END_WHILE

    $default  reduce using rule 30 (controlSymbol)

    controlSymbol  go to state 205


State 191

   49 place: PLACE LPAREN exp COMMA • exp RPAREN SEMICOLON

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 206
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 192

   50 cond: LPAREN exp • RPAREN
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   84    | LPAREN exp • RPAREN
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    RPAREN            shift, and go to state 207
    POWER             shift, and go to state 120


State 193

   75 alternative: cond ALT • exp COLON exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 208
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 194

  112 restOfListOfExp: COMMA • exp restOfListOfExp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 209
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 195

  110 listOfExp: exp restOfListOfExp •

    $default  reduce using rule 110 (listOfExp)


State 196

   95 exp: BUILTIN LPAREN listOfExp RPAREN •

    $default  reduce using rule 95 (exp)


State 197

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   35 errorifelse: IF THEN stmtlist ELSE stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_IF            shift, and go to state 210
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 198

   50 cond: LPAREN exp RPAREN •

    $default  reduce using rule 50 (cond)


State 199

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   36 if: IF controlSymbol cond THEN stmtlist • END_IF
   37   | IF controlSymbol cond THEN stmtlist • ELSE stmtlist END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    ELSE              shift, and go to state 211
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_IF            shift, and go to state 212
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 200

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   39 while: WHILE controlSymbol cond DO stmtlist • END_WHILE

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_WHILE         shift, and go to state 213
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 201

   40 repeat: REPEAT controlSymbol stmtlist UNTIL cond •

    $default  reduce using rule 40 (repeat)


State 202

   41 for: FOR controlSymbol VARIABLE FROM exp • UNTIL exp DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE FROM exp • UNTIL exp STEP exp DO stmtlist END_FOR
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    UNTIL             shift, and go to state 214
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 203

   44 value_list: VALUE • exp COLON stmtlist

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 215
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 204

   43 cases: CASES LPAREN exp RPAREN value_list • default END_CASES
   45 value_list: value_list • VALUE exp COLON stmtlist

    VALUE    shift, and go to state 216
    DEFAULT  shift, and go to state 217

    $default  reduce using rule 47 (default)

    default  go to state 218


State 205

   38 dowhile: DO controlSymbol stmtlist WHILE controlSymbol • cond
   39 while: WHILE controlSymbol • cond DO stmtlist END_WHILE

    LPAREN  shift, and go to state 126

    cond  go to state 219


State 206

   49 place: PLACE LPAREN exp COMMA exp • RPAREN SEMICOLON
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    RPAREN            shift, and go to state 220
    POWER             shift, and go to state 120


State 207

   50 cond: LPAREN exp RPAREN •
   84 exp: LPAREN exp RPAREN •

    ALT       reduce using rule 50 (cond)
    $default  reduce using rule 84 (exp)


State 208

   75 alternative: cond ALT exp • COLON exp
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    COLON             shift, and go to state 221
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 209

   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp
  112 restOfListOfExp: COMMA exp • restOfListOfExp

    COMMA             shift, and go to state 194
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 111 (restOfListOfExp)

    restOfListOfExp  go to state 222


State 210

   35 errorifelse: IF THEN stmtlist ELSE stmtlist END_IF •

    $default  reduce using rule 35 (errorifelse)


State 211

   37 if: IF controlSymbol cond THEN stmtlist ELSE • stmtlist END_IF

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 223


State 212

   36 if: IF controlSymbol cond THEN stmtlist END_IF •

    $default  reduce using rule 36 (if)


State 213

   39 while: WHILE controlSymbol cond DO stmtlist END_WHILE •

    $default  reduce using rule 39 (while)


State 214

   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL • exp DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE FROM exp UNTIL • exp STEP exp DO stmtlist END_FOR

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 224
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 215

   44 value_list: VALUE exp • COLON stmtlist
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    COLON             shift, and go to state 225
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 216

   45 value_list: value_list VALUE • exp COLON stmtlist

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 226
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 217

   46 default: DEFAULT • COLON stmtlist

    COLON  shift, and go to state 227


State 218

   43 cases: CASES LPAREN exp RPAREN value_list default • END_CASES

    END_CASES  shift, and go to state 228


State 219

   38 dowhile: DO controlSymbol stmtlist WHILE controlSymbol cond •
   39 while: WHILE controlSymbol cond • DO stmtlist END_WHILE

    DO  shift, and go to state 186

    $default  reduce using rule 38 (dowhile)


State 220

   49 place: PLACE LPAREN exp COMMA exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 229


State 221

   75 alternative: cond ALT exp COLON • exp

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 230
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 222

  112 restOfListOfExp: COMMA exp restOfListOfExp •

    $default  reduce using rule 112 (restOfListOfExp)


State 223

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   37 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist • END_IF

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    END_IF            shift, and go to state 231
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 224

   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp • DO stmtlist END_FOR
   42    | FOR controlSymbol VARIABLE FROM exp UNTIL exp • STEP exp DO stmtlist END_FOR
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    STEP              shift, and go to state 232
    DO                shift, and go to state 233
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 225

   44 value_list: VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 234


State 226

   45 value_list: value_list VALUE exp • COLON stmtlist
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    COLON             shift, and go to state 235
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 227

   46 default: DEFAULT COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 236


State 228

   43 cases: CASES LPAREN exp RPAREN value_list default END_CASES •

    $default  reduce using rule 43 (cases)


State 229

   49 place: PLACE LPAREN exp COMMA exp RPAREN SEMICOLON •

    $default  reduce using rule 49 (place)


State 230

   75 alternative: cond ALT exp COLON exp •
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120

    $default  reduce using rule 75 (alternative)


State 231

   37 if: IF controlSymbol cond THEN stmtlist ELSE stmtlist END_IF •

    $default  reduce using rule 37 (if)


State 232

   42 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP • exp DO stmtlist END_FOR

    STRING     shift, and go to state 45
    NUMBER     shift, and go to state 46
    VARIABLE   shift, and go to state 47
    CONSTANT   shift, and go to state 48
    BUILTIN    shift, and go to state 49
    NOT        shift, and go to state 50
    PLUS       shift, and go to state 51
    MINUS      shift, and go to state 52
    LPAREN     shift, and go to state 53
    INCREMENT  shift, and go to state 54
    DECREMENT  shift, and go to state 55

    exp      go to state 237
    preinc   go to state 57
    postinc  go to state 58
    predec   go to state 59
    postdec  go to state 60


State 233

   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 238


State 234

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   44 value_list: VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    VALUE      reduce using rule 44 (value_list)
    DEFAULT    reduce using rule 44 (value_list)
    END_CASES  reduce using rule 44 (value_list)

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 235

   45 value_list: value_list VALUE exp COLON • stmtlist

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 239


State 236

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   46 default: DEFAULT COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    END_CASES  reduce using rule 46 (default)

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 237

   42 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp • DO stmtlist END_FOR
   78 exp: exp • CONCAT exp
   79    | exp • PLUS exp
   80    | exp • MINUS exp
   81    | exp • MULTIPLICATION exp
   82    | exp • DIVISION exp
   83    | exp • INT_DIVISION exp
   91    | exp • MODULO exp
   92    | exp • POWER exp
   96    | exp • GREATER_THAN exp
   97    | exp • GREATER_OR_EQUAL exp
   98    | exp • LESS_THAN exp
   99    | exp • LESS_OR_EQUAL exp
  100    | exp • EQUAL exp
  101    | exp • NOT_EQUAL exp
  102    | exp • AND exp
  103    | exp • OR exp

    DO                shift, and go to state 240
    OR                shift, and go to state 105
    AND               shift, and go to state 106
    GREATER_OR_EQUAL  shift, and go to state 107
    LESS_OR_EQUAL     shift, and go to state 108
    GREATER_THAN      shift, and go to state 109
    LESS_THAN         shift, and go to state 110
    EQUAL             shift, and go to state 111
    NOT_EQUAL         shift, and go to state 112
    CONCAT            shift, and go to state 113
    PLUS              shift, and go to state 114
    MINUS             shift, and go to state 115
    MULTIPLICATION    shift, and go to state 116
    DIVISION          shift, and go to state 117
    MODULO            shift, and go to state 118
    INT_DIVISION      shift, and go to state 119
    POWER             shift, and go to state 120


State 238

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    END_FOR           shift, and go to state 241
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 239

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   45 value_list: value_list VALUE exp COLON stmtlist •

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    VALUE      reduce using rule 45 (value_list)
    DEFAULT    reduce using rule 45 (value_list)
    END_CASES  reduce using rule 45 (value_list)

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 240

   42 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO • stmtlist END_FOR

    $default  reduce using rule 2 (stmtlist)

    stmtlist  go to state 242


State 241

   41 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp DO stmtlist END_FOR •

    $default  reduce using rule 41 (for)


State 242

    3 stmtlist: stmtlist • stmt
    4         | stmtlist • error
   42 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist • END_FOR

    error             shift, and go to state 4
    SEMICOLON         shift, and go to state 5
    COMMENT           shift, and go to state 6
    PRINT             shift, and go to state 7
    READ              shift, and go to state 8
    READ_STRING       shift, and go to state 9
    IF                shift, and go to state 10
    WHILE             shift, and go to state 11
    THEN              shift, and go to state 12
    REPEAT            shift, and go to state 13
    FOR               shift, and go to state 14
    END_FOR           shift, and go to state 243
    CASES             shift, and go to state 15
    DO                shift, and go to state 16
    CLEAR             shift, and go to state 17
    PLACE             shift, and go to state 18
    LETFCURLYBRACKET  shift, and go to state 19
    VARIABLE          shift, and go to state 20
    CONSTANT          shift, and go to state 21
    INCREMENT         shift, and go to state 22
    DECREMENT         shift, and go to state 23

    stmt         go to state 24
    preincstmt   go to state 25
    postincstmt  go to state 26
    predecstmt   go to state 27
    postdecstmt  go to state 28
    block        go to state 29
    errorstmt    go to state 30
    errorif      go to state 31
    errorifelse  go to state 32
    if           go to state 33
    dowhile      go to state 34
    while        go to state 35
    repeat       go to state 36
    for          go to state 37
    cases        go to state 38
    clear        go to state 39
    place        go to state 40
    asgn         go to state 41
    print        go to state 42
    read         go to state 43
    readstring   go to state 44


State 243

   42 for: FOR controlSymbol VARIABLE FROM exp UNTIL exp STEP exp DO stmtlist END_FOR •

    $default  reduce using rule 42 (for)
